                                                           J3/16-282r2
To: J3
From: John Reid & Bill Long
Subject: UTI 31
Date: 2016 October 11

Discussion
----------

Part 1. An edit is needed for other error conditions during execution
of the CRITICAL statement.

Part 2. This comment led us to review the text re error conditions for
LOCK and UNLOCK statements and propose several edits for 11.6.11. The
behavior for these statements does not fit with that for the other
statements treated in paras 4 and 5. It is treated specially in para 7.
It would be much better to treat the behavior fully in one place,
para 7. Edits are provided to do this.

Parts 3 and 4. In 11.6.11, para 6 should be changed to refer only to
STAT_STOPPED_IMAGE, as in the present standard.

Part 5. We agree with the Editor's decision here.

Part 6. In 11.6.11, para 6 should omit CHANGE TEAM and END TEAM since
their semantics require additional actions for the active images of
the affected team.


Edits to J3/16-007r2:
--------------------

[215:6-7] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para 4, delete sentence 4 "The images involved in
execution of a LOCK or UNLOCK statement are the image on which the
lock variable is located and the executing image."
{Remove LOCK and UNLOCK from the set of "images involved"
concept. UTI31, Part 2.}

[215:9-10] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para 5, sentence 1, change
"LOCK, SYNC ALL, SYNC IMAGES, SYNC TEAM, or UNLOCK" to
"SYNC ALL, SYNC IMAGES, or SYNC TEAM".
{Remove LOCK and UNLOCK from the paragraph that uses the "images
involved" concept. UTI31, Part 2.}

[215:19] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para6, delete "CHANGE TEAM, END TEAM,".
{CHANGE TEAM and END TEAM do more than just SYNC MEMORY in the case of
a stopped image in the current team. UTI31, Part 6.}

[215:20] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para 6, change
"an error condition other than STAT_FAILED_IMAGE occurs" to
"the error condition STAT_STOPPED_IMAGE occurs".
{Limit the error conditions "other than STAT_FAILED_IMAGE" to just
STAT_STOPPED_IMAGE that triggers the SYNC MEMORY effect. Restores the
16-007r1 and F2008 behavior for SYNC ALL and SYNC IMAGES. UTI31, Parts
3 and 4.}

[215:23] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para 7, after the first sentence, add "If the STAT=
specifier appears in a LOCK statement and the image on which the lock
variable is located has failed , the variable specified by the STAT=
specifier becomes defined with the value STAT_FAILED_IMAGE.  If the
STAT= specifier appears in a LOCK statement and the lock variable is
unlocked because of the failure of the image that locked it, the
variable specified by the STAT= specifier becomes defined with the
value STAT_UNLOCKED_FAILED_IMAGE (16.10.2.30a)."
{Explain what happens for LOCK. UTI31 Part 2.}

[215:27] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, para 7, after the third sentence, add "If the STAT=
specifier appears in an UNLOCK statement and the image on which the
lock variable is located has failed, the variable specified by the
STAT= specifier becomes defined with the value STAT_FAILED_IMAGE."
{Explain what happens for UNLOCK. UTI31 Part 2.}

[215:34] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, at end of para 8, add
"If another error condition occurs during execution of a CRITICAL
statement that has a STAT= specifier, the <stat-variable> becomes
defined with a processor-dependent value other than STAT_FAILED_IMAGE."
{Say what happens for other error conditions in CRITICAL. UTI31, Part
1.}

[215:40+] In 11.6.11 STAT= and ERRMSG= specifiers in image control
statements, remove UTI 031.

[445:38+] After 16.10.2.30 STAT_UNLOCKED insert a new subclause:

"16.10.2.30a STAT_UNLOCKED_FAILED_IMAGE

The value of the default integer scalar constant
STAT_UNLOCKED_FAILED_IMAGE is assigned to the variable specified in a
STAT= specifier (11.6.11) of an LOCK statement if the lock variable is
unlocked because of the failure of the image that locked it."


[446:9] 16.10.2.32 Uniqueness of named constant values, change "and
STAT_UNLOCKED" to "STAT_UNLOCKED, and STAT_UNLOCKED_FAILED_IMAGE"
