To: J3                                                     J3/22-203
From: Robert Corbett
Subject: component names
References: J3/22-007r1
Date: 2022-October-24

On the news group cop.lang.fortran, Peter Klausler pointed
out that the second sentence of the first paragraph of
subclause 19.3.4 "Components, type parameters, and bindings"
can easily be misread. That sentence states

      Outside of the type definition, it may also
      appear within a designator of a component of
      that type or as a component keyword in a
      structure constructor for that type.

I agree with the points he raised.  First, the wording
makes it seem that the uses in a designator or as a
component keyword are allowed only outside the type
definition.  Also, the word "also" suggests that there
is some other use of component names outside type
definitions.  Parallel issues arise for the second and
third sentences of 19.3.4.

Edits to clarify the text are supplied.


EDITS

[19.3.4p1 "Components, type parameters, and bindings", 19-21]
Replace "it may also appear within a designator" with
"it can appear only within a designator".
{The resulting sentence is
  Outside the type definition, it can appear only within a
  designator of a component of that type or as a component
  keyword in a structure constructor for that type.}

[19.3.4p2 "Components, type parameters, and bindings", 22-24]
Replace "it may also appear as a type parameter keyword" with
"it can appear only as a type parameter keyword".
{The resulting sentence is
  Outside the derived-type definition, it can appear only as
  a type parameter keyword in a /derived-type-spec/ for the
  type or as the /type-param-name/ of a /type-param-inquiry/.}

[19.3.4p3 "Components, type parameters, and bindings", 26]
Replace "it may also appear as the /binding-name/" with
"it can appear only as the /binding-name/".
{The resulting sentence is
  Outside of the derived-type definition, it can appear only
  as the /binding-name/ in a procedure reference.}
