
                                                        J3/06-346r1

Date:    16 November 2006
To:      J3
From:    Van Snyder / Aleksandar Donev
Subject: Notes on Clause 6
References: 06-210r2, 06-007r1

This is a response to 06-346.

Q. [117:1] We should change the term "structure component" since it
   can be read to mean "component of a structure" rather than being
   a made-up term. A structure is scalar, but "structure component"
   can be an array. I find this very weird and confusing. Maybe
   "object component".

A. Present long-standing terminology does not need to be changed.


Q. [117:10] We need an equivalent to C614 for the <image-selector>. At
   present this seems to be a plain restriction (non constraint) at
   [124:5].

A. Agreed.

EDIT. [117:11+] Add new constraint
  "C614a (R613) If <image-selector> appears, the number of <co-subscript>s shall be
         equal to the co-rank of <part-name>."

EDIT. [124:5] Delete "The number ... object."


Q. [126:30] Shouldn't we add "as if via intrinsic assignment" or something
   alike to the end of the paragraph. The current phrasing "the value of
   <allocate-object> becomes that of <source-expr>" does not seem to make
   sense for the case when <source-expr> is scalar and <allocate-object>
   an array.

A. No, the operation is cloning, not assignment.  An edit is supplied to
   correct the wording for the broadcast case.

EDIT. [126:30] Append to sentence
  "if <source-expr> has the same rank as <allocate-object>, otherwise the
   value of each element of <allocate-object> becomes that of <source-expr>".
Note to editor: wordsmith if you have the time.


Q. [120:11] We had an e-mail discussion about the "does not require the
   shape". A subroutine reference such as:
   CALL Subroutine(assumed_size_dummy%component)
   does not "require" the shape of assumed_size, yet we want to
   prohibit it. We seemed to agree that the wording should be improved.

A. "We" do not agree that the shape of assumed_size_dummy is not required,
   assumed_size_dummy is not the actual argument and is already prohibited.

===END===
