
                                                            J3/04-418r1

To:     J3 Members                              Date:  10-Nov-2004
From:   /interp/Stan Whitlock
Subj:   Final Results of the F03 interp letter ballot #9

Here are the results of J3 letter ballot #9 on Fortran 2003
interpretations that closed on 20-Oct-2004.  The ballot is in J3 paper
04-377 from meeting #170.  If I have transcribed a vote or a comment
incorrectly, please let me know.

J3 rep                F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03
                        1   2   3   4   5   6   7   8   9  10  11  12  13

Rich Bleikamp           no ballot received
Dick Hendrickson        Y   Y   Y   Y   Y   Y   Y   N   Y   Y   Y   N   Y
Michael Ingrassia       no ballot received
Rob James               C   Y   Y   Y   Y   Y   Y   N   Y   Y   Y   Y   Y
Bill Long               Y   Y   Y   Y   Y   Y   Y   N   Y   Y   Y   N   Y
Jeanne Martin           Y   Y   Y   Y   Y   Y   Y   N   Y   Y   Y   N   Y
Dan Nagle               Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y
Craig Rasmussen         no ballot received
Van Snyder              Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   N   Y
Matthijs (Toon)         Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y   Y
Stan Whitlock           Y   Y   Y   Y   Y   Y   Y   N   Y   Y   Y   N   Y

J3 rep                F03 F03 F03
                       14  15  16

Rich Bleikamp           no ballot received
Dick Hendrickson        Y   Y   Y
Michael Ingrassia       no ballot received
Rob James               N   C   Y
Bill Long               Y   Y   Y
Jeanne Martin           Y   Y   Y
Dan Nagle               Y   Y   Y
Craig Rasmussen         no ballot received
Van Snyder              Y   N   Y
Matthijs/Toon           Y   Y   Y
Stan Whitlock           Y   Y   Y

where  Y means "yes"
       C       "yes with comment"
       N       "no with comment"

The comments for each interp are attached below in the same order as the
table above.

At J3 meeting #170, after further consideration:
  .  F03/0008 failed - a new answer was proposed in 04-421
  .  F03/0012 failed - a new answer was proposed in 04-401
  .  the comment on F03/0014 was accepted

The summary of FINAL results is as follows:

    P = passed
    C = passed as amended
    F = further consideration

  F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03 F03
    1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16

    P   P   P   P   P   P   P   F   P   P   P   F   P   C   P   P

The interps marked "C" pass with some minor typo fixes, as noted
below.

The interps marked "F" will be reconsidered at J3 meeting
#170 by the /interp committee who will decide if the status becomes
"withdraw for more work", "passed as amended", or "passed as
printed".

/Stan


************************************************************************

F03/0001   Generic type-bound procedures

  Rob James' YES comment for F03/0001:

    While there is no technical problem, the different uses of <binding-
    name> are confusing, and should be changed in the next revision of
    the standard.

F03/0008   Pointer assignment and arrays

  Dick Hendrickson's NO comment for F03/0008:

    I agree with Bill and Rob about the additions to the constraints.

  Rob James' NO comment for F03/0008:

    There is an additional edit necessary for this interpretation.
    [143:37] Insert "<scalar->" before "<variable>".

  Bill Long's NO comment for F03/0008:

    The interp edits change <variable> to <scalar-variable> in R736 and
    R741.  The same change needs to be made in the constraints on these
    rules: C722 [143:24] and C725 [143:37].

  Jeanne Martin's NO comment for F03/0008:

    I agree with the other NO votes.

  Stan Whitlock's NO comment for F03/0008:

    I agree with BillL.

F03/0012   Procedure pointers and the EXTERNAL attribute

  Dick Hendrickson's NO comment for F03/0012:

    Wait for action on 401

  Bill Long's NO comment for F03/0012:

    The proposed edits create a conflict with C568 [91:5] . Van has
    submitted 04-401 as a proposed solution to this problem. We should
    revisit this interp based on that paper.

  Jeanne Martin's NO comment for F03/0012:

    I agree with the other NO votes.

  Van Snyder's revised NO comment for F03/0012:

    I change my YES vote to a NO and will submit a paper {04-401}
    with a revised answer.

  Stan Whitlock's NO comment for F03/0012:

    I agree with BillL.

F03/0014   Automatic arrays in interface bodies

  Rob James' NO comment for F03/0014:

    The direction of this interpretation is good, but I disagree with
    the second edit.  The meaning of the word "may" is ambiguous, and
    unless I am mistaken, its usage violates an ISO rule.  If "may be
    declared only in" is changed to "must only be declared in", then
    I will change my vote to YES.

    {Later Rob added:  "shall" would be the right word to use here.}

F03/0015   TARGET attribute for associate names

  Rob James' YES comment for F03/0015:

    I believe that Van Snyder's argument against the edit in this
    interpretation is incorrect.  He makes the assumption that this
    part of the standard is talking about the target of the selector.
    [161:19] actually says "if and only if the selector is a variable
    and has the attribute".  It does not say "the target of the
    selector".  Other parts of the standard ([413:11] in particular)
    mention the possibility of the selector having the POINTER
    attribute, so it is not obvious that [161:19] really means "the
    target of the selector" in the case where the selector is a
    pointer.

  Van Snyder's NO comment for F03/0015:

    I agree with the answer but don't agree that any edits are
    necessary.  The target of a pointer necessarily has the target
    attribute.  We require at [413:11-12] that if the selector has
    the POINTER attribute it shall be associated with a target, and
    say that the associate name becomes associated with that target.
    The target of a pointer is a variable.  So the text already at
    [161:18-19] is adequate.
