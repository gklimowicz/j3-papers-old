
                                                             J3/99-151

Date:    28th May 1999
To:      J3
From:    Malcolm Cohen
Subject: Unresolved issue 139

1. Introduction

This issue says
      I don't know what the para in 6.0 after R608 is trying to say.
      It has 2 cases of "shall not be defined".  The "shall not" bit
      reads like a requirement, but I don't understand what the
      program is being required to do.  Hmm.  Perhaps it is talking
      about becoming defined instead of being defined.  That might at
      least make some sense.  I don't have time to track it down right
      now.

2. Discussion

I presume that this paragraph means the same as it did in Fortran 90 and in
Fortran 95, where the words are unchanged except for the replacement of
"arrays" with "variables".

We use "be defined" with an active sense in many places in the standard,
e.g.
in 2.4.1.1
  "A <<variable>> may have a value and may be defined and redefined ..."
in ch7
  "A variable may be defined or redefined by execution of an assignment
statement."
in ch12
  "If it is a dummy data object, it shall not be referenced or be defined
..."
and
  "the overlapped portions shall not be defined, redefined, ..."
and again
  "shall not be defined, redefined, or become undefined through ..."
etc.

3. Edits

{Delete the J3 note}
[17:29-35] Delete.
