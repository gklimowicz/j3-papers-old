                                02-320

    Public Review Comment #9 by Arjen Markus

To:         J3
From:       Craig Dedo
Date:       November 11, 2002
Subject:    Public Review Comment #9 by Arjen Markus

Public Review Comment #9
From: Arjen Markus [arjen.markus@wldelft.nl]
Sent: Thursday, October 31, 2002 4:38 AM
To: Donovan, Deborah
Subject: Comments w.r.t. Fortran 2000

Dear madam,

I approach you directly, instead of via my national standards body,
because I could not find the proper address.

I would like to send you the following comments on the draft Fortran
2000
standard. They may be small details, but I would appreciate it if you
could pass them on.

My main source of information is the latest issue of the Fortran Forum,
which describes this standard.

The intrinsic module ISO_FORTRAN_ENV should in my opinion contain
as much of the environment as possible, certainly those items that
may be of influence on the working of the Fortran program. I think
the following are missing:

1. Indication of big-endian or little-endian format for the
representation of numbers.
    If this information is known at run-time certain operations,
    like reading binary files from other sources can be made essentially
    platform-independent.

2. Unit used for the record length of direct-access files.
Right now this is a piece of information that influences the results
enormously and is difficult (though not impossible) to assess at
run-time.

3. Some indication of the file system when one has to construct proper
file names, for instance, the character used to separate directory
names.

4. The maximum length of messages from the IOMSG= keyword.
That way, one can simply declare a string like:

CHARACTER(LEN=MAX_MSG_LENGTH) :: string

and be sure that the message is saved in its entirety

Other comments:

5. Does FLUSH allow the flusing of the standard output
(FLUSH(OUTPUT_UNIT)
would work as I expect?)

6. Is there a way to influence the rounding mode for calculations (it is
possible for formatted output)

7. The current way of interfacing C and Fortran (via essentially
FORTRAN77
constructs and platform-dependent encoding in C) will still work?

Kind regards,
Arjen Markus


References
02-007r3, Fortran 2000 Committee Draft

[End of J3 / 02-320]
