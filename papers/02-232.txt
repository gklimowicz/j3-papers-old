
                                                                J3/02-232

To: J3/INTERP
Subject: Interpretation request on STAT= variable requirements in ALLOCATE
From: Malcolm Cohen.
Date: 2002-07-19

----------------------------------------------------------------------

NUMBER: 000099
TITLE: STAT= variable requirements in ALLOCATE
KEYWORDS: ALLOCATE, STAT=
DEFECT TYPE:
STATUS: J3 consideration in progress

QUESTION:

[79:40-41] says
  "The <stat-variable> shall not appear in a bound in the same ALLOCATE
   statement."

This requirement appears, on the face of it, to apply to the syntax, not
to whichever actual variable is identified by the syntax.

Question 1:

Given
  INTEGER :: A(10) = (/ (i,i=1,10) /)
  POINTER P(:)
  READ *,I,J
  ALLOCATE(P(A(I)),STAT=A(J))

Is the ALLOCATE standard-conforming, or does it depend on the relative
values of I and J?

From the quoted text, it would appear that it is always conforming,
even when I==J.

Question 2:

Similarly, given:
  EQUIVALENCE(I,J)
  POINTER P(:)
  I = 5
  ALLOCATE(P(I),STAT=J)
is the ALLOCATE conforming?

Question 3:

Similarly, given:
  POINTER P(:)
  I = 5
  ALLOCATE(P(DIGITS(I)))
is the ALLOCATE conforming?

From the quoted text, it would appear not to be conforming, despite the
non-dependence of the array bound on the value of the STAT= variable.

ANSWER:

The intent was that the restriction should apply to the actual variable
being used for the STAT= variable, not to the syntax.  Thus,

(1) The ALLOCATE statement is only standard-conforming if I and J are
    not equal.

(2) The ALLOCATE statement is not standard-conforming.

(3) The ALLOCATE statement is standard-conforming.

Edits to the standard are supplied to clarify this.

EDITS:

[79:40-41] Delete "The ... statement."
[80:6] Append to paragraph
  "No array bound in an ALLOCATE statement shall depend on the value
   of the <stat-variable>."

SUBMITTED BY: Malcolm Cohen.

HISTORY: 02-232 m162 Submitted

----------------------------------------------------------------------
