To: J3                                                     J3/18-107r1
From:    Bill Long
Subject: Dummy arguments of assumed type and size
Date: 2018-February-12

Discussion
----------

Paper 13-283, passed at J3 meeting 201, somehow failed to get entered
into the F2018 draft. This paper is aimed at repairing that oversight
and differs only in that the edit instructions have been updated to
refer to N2146.  The Introduction/Discussion is unchanged from 13-283
and is not reproduced here.


Edits to N2146
--------------

[Page 316] 15.5.2.4 Ordinary Dummy Variables, paragraph 13 rewrite:

 - split the first sentence into a separate paragraph
 - replace the rest with a new paragraph

  "If the actual argument is a noncoindexed scalar, the corresponding dummy
   argument shall be scalar unless
   \begin{itemise}
   \item
   the actual argument is default character, of type character with the C
   character kind (18.2.2), or is an element or substring of an element of
   an array that is not an assumed-shape, pointer, or polymorphic array,
   \item
   the dummy argument has assumed rank, or
   \item
   the dummy argument is an assumed-type assumed-size array.
   \end{itemise}
{Allow scalar to associate with an assumptive dummy.}

[Page 320] 15.5.2.11 Sequence association, paragraph 1, first sentence:
  after "represents an element sequence if"
  change "it" to
    "the dummy argument is not assumed-type and the actual argument".
{If the dummy argument is assumed-type, we don't have traditional sequence
 association - especially in the case of character, otherwise we get a
 divide by NaN trying to calculate the number of elements.}

[Page 320] 15.5.2.11 Sequence association, following paragraph 4,
  insert a new paragraph:
  "If an assumed-type dummy argument is an assumed-size array and the
   actual argument is scalar, the dummy array has exactly one element.
   Otherwise, an assumed-type assumed-size dummy array has the same number
   of elements as the actual argument."
{New thingo semantics in "sequence" association.}


