
                                                         J3/06-340r1

Date: 2006/11/14
To: J3
From: Malcolm Cohen
Subject: Clause 4 BITS problems
References: J3/06-007R1, 06-278

This is the answer to 06-340, which was a reworking of the bits parts
of paper 06-278 which was deferred from meeting 177.

Q. [53:30] Must the additional representation methods be dense
   like the ones up to 4*(integer size) are.
A. No.
Q. Or, could a processor allow 1 through 128 and then 143 and 231?
A. Yes.

This follows from [53:30] which allows additional representations
(above the 4*NUMERIC_STORAGE_SIZE) but imposes no requirements on them.

Q. [54:27-28] Is this what we want? For integers surely all
   processors overflow for
            9999999999999_TwoByteKind.
   Ditto for 1.0E666666666666_IEEEsingle.
   Why would anyone want to just use the right hand bits of a typed constant?
A. Because they only understand HEX and want to write a two-bit constant.
Q. If we really want to allow a digits from a constant to be thrown away
   from the left, then [41:12-13] should be reworded to
   say that bit values are not completely specified.
A. Instead, we should only allow constants which don't "overflow", i.e.
   the thrown-away bits must be zero.

EDIT. [54:28]
      After "value of the constant"
      Insert "and the remaining bits shall be zero".

===END===
