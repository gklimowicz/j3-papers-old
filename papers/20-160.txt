To: J3                                                     J3/20-160
From: Gary Klimowicz
Subject: Technical issue UTI-007 in DO CONCURRENT REDUCE
Date: 2020-October-12

Reference: 19-252r2, 20-007

Background
==========

In F202x, we added a new locality clause, REDUCE.

In UTI-007, the editor commented that we describe an initialization at
the start of each iteration (which would be inefficient if actually
implemented for each iteration). We propose an edit to correct this
while retaining the initialization corresponding to the REDUCE operator.



Edits to 20-007r1
=================


{ 11.1.7.5 Additional semantics for DO CONCURRENT constructs }

{ UTI-007 Initialize the construct entity once for all iterations }

[190:31-32 p3] The last sentence of paragraph 3 reads "At the beginning
of execution of each iteration, the construct entity is assigned an
initial value corresponding to its reduce-operation as specified in
Table 11.1."

Since the notion of thread-local storage is implied for REDUCE
variables, we can reword this to say that the construct entity is only
initialized once before the iterations begin.

Change the last sentence to read, "Before execution of the iterations
begin, the construct entity is assigned an initial value corresponding
to its reduce-operation as specified in Table 11.1."

{ the construct entity gets its value once for all iterations }



[191:before line 1]

Delete UTI-007.



{ end }


