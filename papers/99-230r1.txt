                                                     J3/99-230r1 (corrected)

Date:    11th October 1999
To:      J3
From:    Malcolm Cohen
Subject: Interpretation request on host association

NUMBER: 00080
TITLE:  Host association and the EXTERNAL attribute
KEYWORDS: Host association, EXTERNAL
DEFECT TYPE:
STATUS: J3 consideration in progress
QUESTION:

Use of a (non-intrinsic) name as a procedure in a procedure reference
implicitly confers the EXTERNAL attribute on the name.  Does this happen
when the name is host-associated?

For example, f90 interp 143 established that

  MODULE m1
    REAL x
  CONTAINS
    SUBROUTINE s
      PRINT *,x(1)
    END SUBROUTINE
  END

was invalid - 11.3.2 now says that a "procedure with implicit interface and
public accessibility shall explicitly be given the EXTERNAL attribute in the
scoping unit of the module".

However, this text says nothing about private entities, so considering:

  MODULE m2
    REAL,PRIVATE :: x
  CONTAINS
    SUBROUTINE s
      PRINT *,x(1)
    END SUBROUTINE
  END

This example does not violate 11.3.2 because X is PRIVATE.
Is this example conforming?

Further, considering:

  PROGRAM m3
    REAL x
  CONTAINS
    SUBROUTINE s
      PRINT *,x(1)
    END SUBROUTINE
  END

This example is not of a module and so 11.3.2 does not apply.
Is this example conforming?

Further, considering

  PROGRAM m4
    EXTERNAL x
  CONTAINS
    SUBROUTINE s
      PRINT *,x(1)
    END SUBROUTINE
  END

Does the invocation as a function in an internal procedure cause X to be
implicitly typed, or is this not conforming?

ANSWER:

No, use of a host-associated name never confers attributes on the host entity.
Examples M2, M3, and M4 are therefore invalid.
Edits are supplied.

EDIT:

[188:28] Delete "and public accessibility".

[188:31] Delete "with public accessibility".

[283:16+] Add new paragraph
"A procedure with an implicit interface that is accessed via host association
 shall explicitly be given the EXTERNAL attribute in the host scoping unit or
 be used as a procedure in that scoping unit; if it is invoked as a function
 in the inner scoping unit, its type and type parameters shall be explicitly
 declared in a type declaration statement in the host scoping unit.  An
 intrinsic procedure that is accessed via host association shall explicitly be
 given the INTRINSIC attribute in the host scoping unit or be used as an
 intrinsic procedure in that scoping unit."

SUBMITTED BY:  Malcolm Cohen
HISTORY:  99-230r1   m151 submitted
