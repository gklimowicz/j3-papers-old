To:       J3                                                    07-298
From:     Jim Xia
Subject:  Interpretation: Restrictions on dummy arguments not present
          for polymorphic type or paramterized derived type
Date: 2007 October 12

NUMBER:   F03/
TITLE:    Restrictions on dummy arguments not present for polymorphic
          type or paramterized derived type
KEYWORDS: dummy argument, present, polymorphic, parameterized derived
          type
DEFECT TYPE: Error
STATUS:   Erratum

DISCUSSION

In 12.4.1.6, rules at [273:7-10] say that if a POINTER/ALLOCATABLE
optional dummy argument is not present then it can not be supplied
as an actual argument corresponding to an optional nonpointer/non-
allocatable dummy argument.

The same reasons underlying these constraints also apply to the
following two situations:
    1.) a polymorphic optional dummy argument that is not present
    is supplied as an actual argument corresponding to an optional
    non-polymorphic dummy argument;

    2.) a non-present optional dummy argument of derived type with
    an assumed type parameter is supplied as an actual argument
    corresponding to an optional dummy argument that does not have
    the same assumed type parameter

One of the reasons that these rules should apply is due to the non-
present dummy argument is supplied as the actual argument to a procedure
using a different calling convention (pass-by-the-dought-factor to pass-
by-address).

It appears that the current standard overlooked these two cases.  An
edit is supplied to correct this oversight.

EDITS:

    [273:10+] Add two paragraphs

    "(8a) If it is polymorphic, it shall not be supplied as an actual
    argument corresponding to an optional nonpolymorphic dummy argument."

    "(8b) If it is of a derived type and has an assumed type parameter,
    it shall not be supplied as an actual argument corresponding to an
    optional dummy argument with the corresponding type parameter not
    being assumed."

SUBMITTED BY: Jim Xia

HISTORY: m182 Submitted
