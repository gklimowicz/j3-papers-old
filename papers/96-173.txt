
                                                            X3J3/96-173
                                                            Page 1 of 1

Date:    November 13, 1997
To:      X3J3
From:    /HPC
Subject: Nature of Interval Arithmetic

One burning question is how should interval arithmetic be added to the 
language, module/intrinsic, multi-part standard, etc. Paper 171 provided 
some reasons why interval arithmetic as a module is undesirable.

It seems that some of the negative feelings about adding intervals as an 
intrinsic type stem from implementation costs. That is, f2k should not 
impose a large cost upon all conforming processors.

We propose that a suitable compromise is:

1. Interval arithmetic be part of the base standard, and adds an 
intrinsic datatype.
 
2. A processor shall be free to provide 0 or more interval kinds. An 
intrinsic function (selected_interval_kind or equivalent) shall be 
provided, and users will be required to use it to determine if this 
facility is available on a given processor. Note that there will be 
restrictions, the interval kinds must match real kinds, and the 
lower bound kind and the upper bound kind will be the same 
kind. (straw vote on 1+2 : 6-7-4)
 
3. Like the IEEE functionality, it may be the case that some 
suitable subsets may be useful (e.g. basic arithmetic support, 
i/o, and library support).
X3j3/96-173r1
