To:      J3                                           J3/17-195
From:    R. Bader
Subject: Comment DE 031 - coarrays inside CHANGE TEAM
Date: 2017 September 24
References: N2137, N2141

Introduction:
~~~~~~~~~~~~~

DE 031 requests adding a NOTE to the end of section 11.1.5 that explains
how coarrays established in an ancestor team are handled inside the
block of a CHANGE TEAM construct. This paper supplies the edit needed to
implement that NOTE, with a modification suggested by John Reid.

Edit to N2137:
~~~~~~~~~~~~~~

At the end of section 11.1.5.2 Execution of a CHANGE TEAM construct,
after NOTE 11.6 (end of page 188), add a new

"NOTE 11.6+

A coarray that is established when a CHANGE TEAM statement is executed
will retain its corank and cobounds inside the block construct. However,
the cosubscripts in an image selector for the coarray will be mapped to
an image index of the team of the image selector, which by default is
the current team, see 9.6.

If, depending on the way the team decomposition has been set up, it is
desired to perform remote accesses based on corank or cobounds different
from those of the original object, an associating coarray can be used.
Appendix C.6.7 supplies an illustration of this.

If it is desired to perform accesses that retain the mapping of
cosubscripts to image indices of an ancestor team (for example, the team
in which the coarray is established), that team can be specified as the
TEAM= argument in the image selector. This mechanism also permits
addressing parts of the coarray hosted on an image that is not a member
of the current team."
