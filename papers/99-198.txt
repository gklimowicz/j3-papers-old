
                                                        J3/99-198

Date:    06 August 1999
To:      J3
From:    Malcolm Cohen
Subject: Interpretation request on argument passing


NUMBER:
TITLE:  TARGET dummy arguments and POINTER expressions
KEYWORDS: TARGET, POINTER, dummy arguments
DEFECT TYPE:
STATUS:
QUESTION:

Consider the following program.

PROGRAM questionable
  REAL,TARGET :: x
  CALL s1(f(x))
  CALL s2(f(x))
  CALL s3(f(x))
CONTAINS
  FUNCTION f(a)
    REAL,POINTER :: f
    REAL,TARGET :: a
    f => a
  END FUNCTION
  SUBROUTINE s1(variable)
    variable = 42                  ! statement 1
  END SUBROUTINE
  SUBROUTINE s2(variable)
    INTENT(OUT) variable
    variable = 42                  ! statement 2
  END SUBROUTINE
  SUBROUTINE s3(targ)
    REAL,TARGET :: targ
    REAL,POINTER :: p
    p => targ
    PRINT *,ASSOCIATED(p,x)        ! statement 3
  END SUBROUTINE
END

Is this program standard-conforming, and if so, what value is printed?

The real question is whether an expression argument that is a pointer
function reference is treated as a variable (data-object) argument with
the variable being the target of the pointer expression.  (Or whether it is
dereferenced as usual in the absence of POINTER dummy arguments).

Re (statement 1), the question is whether VARIABLE is definable when
argument-associated with "F()".

Re (statement 2), if the previous answer was Yes (VARIABLE is definable),
then presumably it can be made INTENT(OUT).  A random sample of 4 compilers
revealed that they considered it not to be definable.

Re (statement 3), the question is whether P is pointer-associated with X,
not pointer-associated with X, or processer-dependent.  Of the same random
sample 3 thought it was associated with X, 1 thought not.

ANSWER:
EDIT:
SUBMITTED BY:  Malcolm Cohen
HISTORY:  99-ccc   m150 submitted
