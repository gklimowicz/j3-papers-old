To:         J3 Members                                       J3/17-150r1
From:       Van Snyder
Subject:    COMMON and SAVE
References: 17-007r1
Date: 2017 June 26

1. Discussion
=============

Subclause 8.10.2.5 says that variables in blank common never become
undefined as the result of executing a RETURN or END statement.
Although this sort-of repeats some of the definition of the SAVE
attribute in 8.5.16p1, there is no specification whether variables in
blank common actually have the SAVE attribute, or do not have the
attribute.  Because 8.10.2.5 is incomplete, it's not obvious, for
example, whether a pointer in blank common becomes undefined if its
target becomes undefined.  8.10.2.5 says no (there's no "except if it's
a pointer and its target becomes undefined"), but 8.5.16 says yes.  This
probably should have been addressed by an interp against F90.

The simplest way to remove the ambiguity is to make 8.10.2.5p1 apply
only to nonpointer data objects in blank common blocks.

2. Edits
========

[128:34 8.10.2.5p1 Differences between named and blank common]
Insert "nonpointer" before "data objects".
