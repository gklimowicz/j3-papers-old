
                                                       J3/06-341r2

Date: 2006/11/15
To: J3
From: Malcolm Cohen
Subject: Clause 6 problems
References: J3/06-007, 06-279

This a response to 06-341r1, which was a reworked version of
paper 279 which was deferred at meeting 177.

Q. [120:8] Should that be "section subscript or subscript list"
   Array(1:10) isn't a whole array. See R619 on 120

A. If
     (a) "whole array" is a synonym for "named array", as the text says,
         just delete the term and use "named array" everywhere.
   or
     (b) if "whole array" means a whole array object that is not an array
         section, rewrite the definition to mean that. Just saying that
         its designator has the final part-ref being nonzero rank with
         no section-subscript-list would be sufficient here.

   Since this is the subject of an interp, action is deferred to interp
   processing.


Q. [123:10-12] This should at least say "variable definition
   context" rather than only list two things. They surely can't be
   the IOMSG thing, nor an internal write unit, etc.

A. Vector-subscripted arrays may appear in a variable definition context,
   it is only these three occurrences that are forbidden.  (Many-to-one
   vector-subscripted arrays are ok, you are just not allowed to execute
   a definition of one.)


Q. [125:10] In an e-mail comment about C628, Malcolm said
   ... this should be an unresolved technical issue.

A. This was UTI 081, and was handled by paper 06-310.


Q. [125:note 6.20, last line] This isn't a "reason". We
   allow A[Q] = 0, and that's not necessarily
   executed on image Q. the purpose of notes is to explain
   things, not just restate constraints.

A. The first sentence of the note explains this; that allocatable
   components must be allocated by the image on which they reside.


Q, [132:4-6] It's not just these three. The termination of any
   executable construct can cause automatic deallocation.

A. No, because co-arrays are not permitted to be function results,
   nor are types containing co-arrays so permitted, automatic
   deallocation does not occur except in these three cases.

Q. [132:12] There was a recent conflict on comp.lang.fortran
   about what "associated with the whole of an object" means.

A. Either this is the subject of a passed F90 interp,
   an interp in progress, or an interp that needs to be written.
   In no case is this something that should just be made up in F2008.

===END===
