                        J3/08-264
To: J3
From: Malcolm Cohen
Subject: Editorial changes that will be added to 019 soon.
Date: 2008 August 12


1. Introduction

This paper lists additional editorial changes the editor intends to add to
the standing document 08-019, unless there is any objection.  If there is
a mistake in this list, please mention which items are possibly in error.

Section 3 lists additional editorial changes that overlap 08-203.


2. Editorial Changes for 08-007r2

[3:1.5.4p3] "this part" -> "This part".
{Capitalise first word of sentence.}

[11:2.1.19-2.2.20] Move "corank" and "cosubscript" definitions
                   to follow [13:2.1.29] "construct entity".
{It wasn't in alphabetic order.}

[20:2.1.95 "result variable" p1]  Append
  "\ref{D12:Function subprogram}" i.e. "(12.6.2.2)"
{This is the best reference for "result variable".}

[61:4.5.2.4p2] After "Data entities" delete "in different scoping units".
{We didn't intend to require data entities to be in different scoping units
 to activate this rule: sure it is the usual case, but when accessing the
 derived types via module renaming one can get them in the same scope.}

[94:5.3.8.6] Index "named constant" here (here is "Implied-shape array").
{Implied-shape array is a significant thing for named constants.}

[109:5.7.1.1, C583]
  After "dummy argument," insert "result variable name,",
  and delete "a function name, \obs{an entry name}, a result name,".
{Simplification.  An actual function name or entry name that is not a
 result variable name is already excluded by the syntax.  Even when RESULT
 does not appear we still say that's the result variable, see first two
 sentences each of [303p4] and [306p3].}

[same place]
  After "that has an allocatable" insert "or pointer",
  and delete "an object of a derived type that has a pointer at any level
              of component selection".
{Simplification.  Pointer components are already ultimate components, no
 matter what level of component selection is happening -- unless a higher
 level component was a pointer or allocatable, which is already excluded.}

[same place, plus 110:C585]
  After "an automatic object," insert "a coarray,"
  and delete C585 entirely.
{Simplification.  Coarray fits perfectly into the C583 list.}

[112:5.7.2.1, C597]
  After "dummy argument," insert "result variable,",
  Delete "a function name, \obs{an entry name},",
  Before "a coarray" insert "or",
  Delete ", or a result name".
{Same simplification as first edit to C583: what we mean here is the result
 variable, we don't have to say it thrice.}

[124:C626] "nonprocedure pointer" -> "data pointer".
{Use our defined term instead of negating its opposite.}

[149:7.1.11p4(4)] After C_SIZEOF insert a space.
{Typo.}

[163:7.2.4.1p2] Near the end of the paragraph,
  replace "; it" by ".  It".
{Is the form "If A ... ; otherwise B ; C." really grammatical?  I don't
 like it.  Turn "; C." into a separate sentence to avoid confusion.}

[175-181:8.1.7] Index "DO construct" throughout, not just the start.
{The whole page range is relevant.}
                Unindex "construct!DO construct".
{This is just a mistake.  "construct!DO" is already indexed.}
                Unindex "DO CONCURRENT" - it occurs on exactly the same
                pages as "DO construct", indexing it separately achieves
                virtually nothing.
{If DO CONCURRENT were indexed elsewhere, and DO were not indexed at that
 place, there would be a case for separate indexing.}

[175:8.1.7.1p2] Replace "may be" by "can be", thrice.
{Capability not permission.}

[303:12.6.2.2] Index "result variable".
  Actually, index "result variable" throughout the document.
{This term is completely unindexed apart from its definition.}

[335:13.7.34p3] "integeror" -> "integer,".
{Fix typo.}

[387:17.7.155p3] After "ARRAY" change "a scalar or array" to "an array".
{Fix typo applying edit at line 275 of 07-116r1.}

===END===
