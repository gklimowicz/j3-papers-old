
                                                       J3/05-133

Date: 18-Jan-2005
To: J3
From: Bill Long
Subject: Concurrent loop construct
References: J3/04-243


1) Number:

   TBD

2) Title:

   DO CONCURRENT Construct

3) Submitted By:

   J3

4) Status:

   For Consideration

5) Basic Functionality:

The DO CONCURRENT construct is a new form of the block DO construct
using loop control syntax like that of FORALL.  It would allow the
iterations of the loop to be executed in any order. Restrictions on
the statements in the loop block are required, but the restrictions
are significantly fewer than for FORALL constructs.

6) Rationale:

The performance of most modern processors is enhanced, sometimes
significantly, if the number of memory references is reduced. This is
typically accomplished by keeping more of the program data in
processor registers, especially during iterations of a loop. Data from
different loop iterations may be held in independent parts of a
multi-word register (vectorization), in disjoint subsets of a single
register set (loop unrolling), or in the register sets of several
different processors or processor cores of a multi-threaded processor
(parallel execution). Many modern computer systems can already take
advantage of all of these optimization methods, and trends in computer
system architecture suggest these optimization techniques will be
even more important in the future.  The DO CONCURRENT construct is
designed to allow compilers to better use these optimizations.

These optimizations rely on the values contained in registers being
the same as the associated values in memory when the corresponding
variables are referenced during execution of the construct. This is
the case if there is no associated memory value during execution of
the construct, or if the nature of cross iteration data dependencies
is properly limited.

In some cases, a compiler can easily detect that a loop is
concurrently executable. Other cases may be difficult or impossible.

The DO CONCURRENT construct provides a way for the programmer to
specify that these aggressive optimizations are allowed. It is cleaner
and more portable than the current method of using directives that
have difference spellings and meanings among vendors.

7) Estimated Impact:

Normative changes to the standard document would be localized to
section 8.1.6. Specifications of the new syntax and restrictions on
the statements in the construct block are needed. Implementation in
compilers should be simple, as many compilers already support similar
features through directives. At a minimum, a compiler could convert
the construct to a set of ordinary DO loops, possibly with an added IF
test. The original proposal in 04-243 was rated as an impact of 5 on
the JKR scale. This proposal is simpler than the original because it
leverages the existing block DO construct.

8) Detailed Specification:

The syntax for DO CONCURRENT specifies a new <loop-control> for the
existing <block-do-construct> that uses the FORALL header syntax:

   [,] CONCURRENT <forall-header>


The values of the index variables for the iterations of the construct
are determined by the rules for the index variables of the FORALL
construct (7.4.4.2.1 and 7.4.4.2.2). The number of distinct index
value tuples is the iteration count for the construct. The order in
which the iterations are executed is indeterminant.

A statement in the loop range shall not cause a branch out of the
loop range. The loop range shall not contain an EXIT statement.

A variable that is referenced in the loop range of a DO CONCURRENT
construct either shall be previously defined during execution of the
loop range for the same tuple of index values, or shall not appear in
a variable definition context in the loop range.

A pointer that is referenced in the loop range of a DO CONCURRENT
construct either shall be previously pointer associated during
execution of the loop range for the same tuple of index values, or
shall not become pointer associated in the loop range.

Procedures referenced in the loop range shall be PURE.

Note 12.44 in section 12.6 (Pure procedures) should be updated to
include the DO CONCURRENT construct as well as the FORALL construct.


9) History:

   Concept originally submitted in J3/04-243 at J3 meeting 167.
