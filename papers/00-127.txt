
                                                               J3/00-127

Date:        2000/02/24
To:          J3
From:        Henry Zongaro
Subject:     Edits for issues 89, 148, 162, 230 and 231 (Interop.)
References:  00-007, 00-011

Issue 89 [65:16-27] raises a concern about an overly complicated description
for a constraint on character dummy arguments with the VALUE attribute.

Edits for issue 89
-------------------

[65:13-15] Change "dummy argument shall not have. . . shall be one"
           to     "character length parameter shall be omitted or shall be
                   specified by a constant specification expression with the
                   value one"

[65:16-27] Delete J3 Unresolved issue 89.

-------------------------------------------------------------------------

Issue 148 [88:18-22] mentions a reference to the BIND(C) statement.  At one
point, the BIND(C) <type-attr-spec> of a derived type definition was going
to be a statement, much as the SEQUENCE statement is, but that changed without
this text changing.

Edits for issue 148
-------------------

[88:15] Change "SEQUENCE and BIND(C) statements"
        to     "and SEQUENCE statements and the BIND(C) <type-attr-spec>"

[88:18-22] Delete J3 Unresolved issue 148.

-------------------------------------------------------------------------

Issue 162 [273:28-38] asks whether procedures have binding labels or
subprograms do.  It also points out that the text describes procedures
as being defined by ENTRY statements, when it is in fact the subprogram
that contains the ENTRY statement that defines the procedure.

Regarding the first half of the issue, it was intended that only procedures
should have binding labels.  The author of the text was trying to distinguish
between the binding labels that are specified by a <function-stmt> or
<subroutine-stmt> in a subprogram from those specified by such a statement
in an interface body, but that distinction is unnecessary in this context.
This will be corrected by the second and third of the following edits.

Regarding the second half of the issue, the author of this paper agrees with
the editor.  The first and third of the following edits correct this problem
in this subclause.  It will be left to another paper to correct the problem
elsewhere in the draft standard.

Edits for issue 162
-------------------

[273:11] Delete "a Fortran subprogram or an ENTRY statement in"

[273:13] Delete "and has the same binding label as the procedure"

[273:25-26] Delete "as the subprogram or entry that defines the procedure"

[273:28-38] Delete J3 unresolved issue 162.

-------------------------------------------------------------------------

Issue 230 [253:1-9] points out a reference to the imaginary nonterminal
<language-bind-spec>.  Another instance was discovered in subclause 5.2.13.
In both cases, the correct nonterminal is <language-binding-spec>.  In
addition, it points out that the constraint the precedes the issue fails to
deal with the optionality of <proc-interface> in R1210; the fourth edit
addresses that problem.

Edits for issue 230
-------------------

[83:3]   Change "<language-bind-spec>"
         to     "<language-binding-spec>"

[252:43] Change "<language-bind-spec>"
         to     "<language-binding-spec>"

[252:44] Change "<language-bind-spec>"
         to     "<language-binding-spec>"

[252:43] After "shall be"
         add   "present, it shall be"

[253:1-9] Delete J3 Unresolved issue 230.

-------------------------------------------------------------------------
Issue 231 [268:31-40] points out that the example of Note 12.38 is
potentially confusing.

Edits for issue 231
-------------------

[268:17] Change "example of a procedure interface body with the BIND attribute"
         to     "example of the declaration of an interface body with the
                 BIND attribute, and a reference to the procedure declared."

[268:26] Move the text of this line before the word "results" on [268:28]

[268:27+] Insert the following new line of code
            "END PROGRAM"

[268:31-40] Delete J3 Unresolved issue 231.
