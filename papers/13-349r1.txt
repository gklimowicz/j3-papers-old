                                                            J3/13-349r1
To: J3
From: Malcolm Cohen
Subject: Further editorial changes
Date: 2013 October 15


1. Introduction

This paper contains additional suggested editorial changes to 10-007r1.


2. Discussion

The way that constraints sometimes have or not have a syntax rule
qualification is confusing.  In my opinion it is better for the constraints
to be written in such a way that qualification is unnecessary.


3. Syntax rule cross reference

This is completely broken in the published standard; for example,
<ac-do-variable> does not appear in C509.  In 13-007r0d0 this reference has
changed to C507 which is also wrong, the actual constraint being C4107.

In 10-007r1, access-id is cross-reffed to C563 but it is actually C562
(13-007r0d0 gets this right).

Other obvious mistakes:
 (a) <contiguous-stmt> is not cross-referenced at all;
 (b) <image-set> is cross-referenced as only appearing in C852, but it
     also appears in R850;
 (c) <component-name> is reffed in R438 but is xreffed as only appearing
     in C462;
 (d) <procedure-component-name> is also not xreffed correctly.

Since no-one has ever complained, my conjecture is that this is largely
unused.  It is certainly not useful to have a broken cross reference!

This is produced by a short perl program.  If no-one steps forward to read
this (it looks utterly trivial) and find out why it is producing garbage,
we will have to delete D.2.  I can see why C4107 turns into C507
(4*100+107), but not why other things are not appearing.


4. Edits to 10-007r1

[throughout] Index and hyperlink every statement reference and requirement.
{These are frequently not indexed and/or not hyperlinked.}

[throughout] Index "error termination" nearly everywhere it occurs.
             Hyperlink to "2.3.5 Execution sequence".

[28:46+] 2.1 High level syntax, R212 other-specification-stmt,
         after "<<or>> <common-stmt>"
         insert "<<or>> <contiguous-stmt>".
{It was impossible to have a CONTIGUOUS statement.}

[43:13-14] 3.2.3 Constants, R308 <char-constant> and associated constraint
           C303, delete.
{The term <char-constant> appears nowhere else in the standard.}

[44:22] 3.2.5 Statement labels, p3,
        After "Any statement"
        insert "that is not part of another statement, \obs{and that is not
                preceded by a semicolon in fixed form},".
{Contradicts 46:29 and 47:24.  This change does not conflict with the
 existing edit in 13-008r1.}

[45:9] 3.3.1p3, replace the first sentence "There ... fixed." with
  "\obs{There are two source forms.}  Subclause 3.3.2 applies only to free
   source form.  \obs{Subclause 3.3.3 applies only to fixed source form.}".
{Remove duelling permissions and requirements - subclause headings do not
 qualify any text within the subclause!  Also fix wonky fontness.}

[90:3] 5.3.2, C517, delete "(R507)" from the constraint.
{The constraint is completely self-explanatory, it does not need linking to
 the syntax rule.}

[152:4] 7.1.12p1, item (6),
        Insert "and" between "NUM_IMAGES," and "THIS_IMAGE,".
{Conjunction went missing when we added coarrays.}

[153:23] 7.2.1.2p1, item (8), after "unless the variable"
         Change "is an allocatable noncoarray and"
         to     "is allocatable, is not a coarray, and".
{"noncoarray" is not a very good noun.}

[186:4] 8.1.10, C844,
        "(R850) If a <construct-name> appears,"
        ->"If a <construct-name> appears on an EXIT statement,".
{Reword to avoid the need for specifying the syntax rule.}

[187:33-188:1] BNF productions <stop-stmt>, <error-stop-stmt> and
               <stop-code> should be separate "paragraphs" (i.e. they are
               too close together).

[250:31] "numericor" -> "numeric or"
{Typo.}

[309:16] Delete numbered blank line.
{Typesetting error.}

[333:16] 13.7.24 BESSEL_JN, Result Characteristics, Case (i),
         "is scalar" -> "has the same shape as X".
{This case is elemental, thus not scalar for an array X.}

[334:16] 13.7.27 BESSEL_YN, Result Characteristics, Case (i),
         "is scalar" -> "has the same shape as X".
{This case is elemental, thus not scalar for an array X.}

[344:13+x] Delete "Bits" line.
{Conditional error.}

[354:36] ".." -> ".".
{Conditional error.}

[365:4] "Bits" -> "Integer".
{Conditional error.}

[468:27] "USE(rational_number)" -> "USE rational_number".
{Typo.}

===END===
