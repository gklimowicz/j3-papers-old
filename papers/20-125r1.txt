To: J3                                                     J3/20-125r1
From: Van Snyder
Subject: Rank-agnostic array element and section denotation, Edits
Date: 2020-February-28
Reference: 19-150 20-113

[Introduction Data usage and computation]

"o  An array can be used to specify a sequence of subscripts.  Arrays
    can be used to specify a sequence of subscripts and strides in
    subscript triplets."

[125:3-4 9.4.2 Structure components] Replace constraint C913 with:

"C913 (R912) If <section-subscript-list> appears, the sum of the rank of
      <part-ref>, the sizes of the arrays in each multiple subscript,
      and the number of <subscript>s, shall be equal to the rank of
      <part-name>."

[125:15-16 Structure components p2] Replace the second sentence (they
both begin "The rank of <part-ref>...):

"If <section-subscript-list> appears, the rank of <part-ref> is the sum
of the number of subscript triplets, the number of vector subscripts,
and the size of one of the arrays in each multiple section subscript."

{Don't count size(lower bound) + size (upper bound) + size(stride).}

[127:23+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections R919+]
Insert a syntax rule:

"R919a <multiple-subscript> <<is>> @ <int-expr>"

[127:24+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections R920]
Insert an alternative after <<is>> <subscript>:

"     <<or>> <multiple-subscript>"

[127:24+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections R920]
Insert an alternative after <<or>> <subscript-triplet>:

"     <<or>> <multiple-section-subscript>"

[127:27+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections R921+]
Insert a syntax rule:

"R921a <multiple-section-subscript> <<is>>
          @ [ <int-expr> ] : <int-expr> ] : [ <int-expr> ]"

[127:29+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections] Insert
constraints:

"C926a (R919a) <multiple-subscript> shall be an array of rank one.

"C926b (R921a) At least one <int-expr> that is an array of rank one
       shall appear in a <multiple-section-subscript>.  The <int-expr>s
       shall be conformable."

[128:3+ 9.5.3.1 Syntax in 9.5.3 Array Elements and Sections] Insert
new constraint:

"C928a (R921a) If <multiple-section-subscript> is the last
       <section-subscript> in <section-subscript-list>, the second
       <int-expr> shall appear."

[128:7- 9.5.3.2 Array element order-] Between NOTE 3 and the subclause
heading 9.5.3.2 Array element order insert

  "NOTE 4
   Examples of references to parts of arrays using one-dimensional
   arrays to specify sequences of subscripts or sequences of subscript
   section boundaries or strides, assuming V1, V2, and V3 are rank-one
   arrays are:
   
     A(@V1, :, @V2 )   ! Section of A, whose rank is size(V1) + 1 +
                       ! size(V2).  The rank of <part-ref> is one.
     B(@V1, :, @V2: )  ! Section of B, whose rank is size(V1) + 1 +
                       ! size(V2).  The rank of <part-ref> is 1 +
                       ! size(V2).
     C(@V1, :, @::V3 ) ! Strided section of C, whose rank is size(V1) +
                       ! 1 + size(V3).  The rank of <part-ref> is 1 +
                       ! size(V3).
  "

[128:7- 9.5.3.2 Array element order-] Before subclause 9.5.3.2 Array
element order, insert a subclause:

"9.5.3.1a Sequences of subscripts and subscript triplets

A <multiple-subscript> specifies a sequence of subscripts, the number of
which is equal to the size of <multiple-subscript>.  The effect is as if
the array elements were specified individually as subscripts of
consecutive dimensions (not preceded by @).

In a <multiple-section-subscript>, if the first <int-expr> does not
appear, the effect is as if it were a one-dimensional array whose
element values are the lower bounds of the corresponding dimensions.  If
the second <int-expr> does not appear, the effect is as if it were a
one-dimensional array whose element values are the upper bounds of the
corresponding dimensions.  If the third <int-expr> does not appear, the
effect is as if it appeared with the value one.

A <multiple-section-subscript> specifies a sequence of subscript
triplets, the number of which is equal to the size of an <int-expr> that
is an array.  If any <int-expr> is a scalar, the effect is as if it were
broadcast to the shape of one that is an array.  An element of the first
array acts as if it were the first <subscript> in a <subscript> triplet;
an  element of the second array acts as if it were the second
<subscript>; an element of the third array acts as if it were the
<stride>.

[129:3 9.5.3.3.1 Section subscript lists, p1] Replace
"<subscript-triplet> by "subscript triplet".

[129:16 9.5.3.3.2 Subscript triplet, p1] Replace "<stride>" by "stride".




