
                                                           J3/03-121

To: J3
From: UK Fortran panel
Subject: Edits for UK comments MTC3 to MTC6 (various i/o fixes)
Date: 11 February 2003


MTC3 The UK comment was:

    Resolve ambiguity re asynchronous i/o

    It is not clear whether pending i/o operations must be performed in
    order of program execution, in order for each unit, or may be
    performed in any order. The sentence 189:2-4 is ambiguous and
    needs to be changed.

Here is the edit for this:

189:2. Change 'Records' to 'For each external file, records'.


MTC4 The UK comment was:

    Resolve ambiguity re error handing with asynchronous i/o

    What happens if an error occurs while several i/o statements are
    pending?

    A possible edit is the following:
    Page 189: 15+. Add new note 9.30a:
    If an asynchronous data transfer is pending when a synchronous data
    transfer is started on the same unit, or multiple asynchronous data
    transfer statements are waited on out of order, and an error
    condition occurs on any of them, it is processor dependent on which
    of the transfer or transfers it will be indicated, though it shall
    be indicated at least once.

If our proposed edit for MTC3 is accepted, no edit of MTC4 will be
needed.


MTC5 The UK comment was:

    Allow edit descriptors such as 1P2E12.4

    This was a Fortran 66 facility which appears to have been omitted
    by oversight.

    A possible edit is the following:
    Page 219:19. Change "descriptor" to "descriptor, possibly preceded
    by a repeat specifier"

No other edits are suggested.


MTC6 The UK comment was:

    Change ACHAR(10) syntax within stream i/o

    Special handling of ACHAR(10) is unnatural to Fortran programmers.
    We recommend replacement by an intrinsic function such as
    NEW_LINE([KIND]), perhaps recommending that it have the value
    ACHAR(10).

Here are the edits for this:

230:7. Change 'reference ACHAR(10)' to 'NEW_LINE'.

292:16+. Add

   NEW_LINE ([KIND])   New-line character

333:17+. Add

   13.7.81a         NEW_LINE ([KIND])

   Description. Returns the new-line character.

   Class. Inquiry function.

   Argument.

   KIND (optional) shall be a scalar integer initialization expression.

   Result Characteristics. The result is of type character and length
   one. If KIND is present, the kind type parameter is that specified
   by the value of KIND; otherwise, the type is default character.

   Result Value. The value is the character that represents a new line
   in output to files connected for stream access.
