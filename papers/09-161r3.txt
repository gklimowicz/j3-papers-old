                                                           09-161r3
To: J3
From: Van Snyder/Stan Whitlock
Subject: Three more processor dependencies
Date: 2009 March 27/2009 May 6
References: 09-007r1

1. Discussion

Module variables or host-associated variables that are defined in
functions or procedures invoked from them become undefined if a
reference to the function appears in a context where the processor
doesn't have to execute it.

The allocation status of similar variables might be considered to be
undefined, but the allocation status can't become undefined; it's only
indeterminate, which means its processor dependent.

Lock variables are variables so the events that cause them to be
undefined are in 09-007r1 [149:13-15] and [459:11-13].  They are not
processor dependent.

2. Edits

[131:22+ 6.7.1.3p5+]----------------------------------------------------
Editor: Add a new paragraph:

"If the evaluation of a function would change the allocation status of a
variable and if a reference to the function appears in an expression in
which the value of the function is not needed to determine the value of
the expression, the allocation status of the variable after evaluation
of the expression is processor dependent."

[133:23-24] Delete paragraph 13
{This duplicates [132:17-18];  the reference to 6.7.3 at [463:38] is
 correct.}

[463:37+ 5.3.7+]--------------------------------------------------------
Editor: Insert a new item:

" o the allocation status of a variable after evaluation of an
    expression if the evaluation of a function would change the
    allocation status of the variable and if a reference to the function
    appears in the expression in which the value of the function is not
    needed to determine the value of the expression (6.7.1.3);"

[464:3 6.7.4] Insert "or pointer association status" after "allocation
 status"