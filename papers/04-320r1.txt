
                                                            J3/04-320r1

Date:    10th August 2004
To:      J3
From:    Malcolm Cohen
Subject: Generic type-bound procedures

NUMBER: 
TITLE: Generic type-bound procedures
KEYWORDS: generic, type-bound
DEFECT TYPE: Interpretation
STATUS: J3 consideration in progress

QUESTION: Section 12.4.5 discusses how a <binding-name>
in a <procedure-designator> (R1219) is resolved if the <binding-name>
is that of a generic type-bound procedure.  This seems to imply
that it is intended to be possible to invoke a generic type-bound
procedure (which one might have guessed anyway :-)).

However, according to the bnf in 4.5.4, only a specific binding has a
<binding-name>.  The <binding-name-list> in <generic-binding> is a
list of specific binding names.  Thus the discussion of generic
<binding-name>s in 12.4.5 is moot, there being no such things.

Consequently, R1219 appears to provide no syntax for invoking
generic type-bound procedures.

Should R1219 and 12.4.5 be modified to allow a reference of the
form "<data-ref> % <generic-name>" where <generic-name> is
the name of a generic binding of the declared type of <data-ref>?

ANSWER:

No.  As is, the standard provides syntax for invoking a generic
type-bound procedure.

DISCUSSION:

There is no explicit BNF definition of <binding-name> in 4.5.4 or
elsewhere; therefore it's use in R1219 is, by our implicit BNF rules,
simply equivalent to <name> with the only constraints being those
specified for R1219.

In R1219, <binding-name> is allowed and indeed required to be a
"binding name".  This is a technical term defined in 4.5.4 (at
[57:23-26]) to mean both the <binding-name> of a specific type-
bound procedure and the <generic-name> of a generic type-bound
procedure.

Thus all of the analysis in the question is based on a false premise.

EDITS:

None.

SUBMITTED BY: Richard Maine

HISTORY: J3/04-320   m169 Submitted
         J3/04-320r1 m169 Revised
