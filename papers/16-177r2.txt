                                                           J3/16-177r2
To: J3
From: Bill Long & Dan Nagle & Steve Lionel
Subject: Description of list-directed character input
Date: 2016 June 07
References: J3/16-007r1

Discussion:

In 10.10.3.1p9 of List-directed input forms, the description of
assigning a value to a character input item reads:

"Let <len> be the length of the next effective item, and let <w> be
the length of the character sequence. If <len> is less than or equal
to <w>, the leftmost <len> characters of the sequence are transmitted
to the next effective item. If <len> is greater than <w>, the sequence
is transmitted to the leftmost <w> characters of the next effective
item and the remaining <len-w> characters of the next effective item
are filled with blanks. The effect is as though the sequence were
assigned to the next effective item in an intrinsic assignment
statement (7.2.1.3)."

Except the last sentence, the description is of intrinsic assignment
to a nonallocatable character variable. But the last sentence omits
that limitation, and appears to also cover the case of the variable
being allocatable with a deferred len parameter.  I assume we do not
intend to require that character input/output list items are
reallocated during the list-directed input processing. This appears to
be a previously overlooked integration issue.

This issue was raised on the Fortran 90 email list by Anton
Shterenlikht.

A suggested repair is shown below.

Edits to J3/16-007r1:

[279:7, 10.10.3.1p9] Insert "current" before "length of the next
effective item"

[279:10-11, 10.10.3.1p9] Remove the last sentence "The effect is as
though..."

[279:11+, 10.10.3.1p9+] Add a note:

NOTE 10.28+
An allocatable, deferred-length character effective item does not
have its allocation status or allocated length changed as a result
of list-directed input.



