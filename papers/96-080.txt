
                                                             X3J3/96-080

Date:    April 29, 1996
To:      X3J3
From:    Kurt W. Hirchert
Subject: JOR Item No. 114


  <FORTREQ>
  <NUMBER> 114
  <TITLE> Extend ALLOCATE to specify non-KIND type parameters
  <KEYWORDS> ALLOCATABLE, POINTER, ALLOCATE, CHARACTER,
             PARAMETERIZED DERIVED TYPES
  <STATUS> Registered
  <TARGET>
  <SUBGROUP> 
  <VERSION> 1

  <REQUIREMENT>
  Extend the ALLOCATE statement to allow specification of type parameters.
  Allow POINTER or ALLOCATABLE to be used with declaration forms used to
  "assume" type parameters.

  In the current standard, this affects only the LEN parameter of the
  CHARACTER type, but it would extended to parameterized derived types.

  <JUSTIFICATION>
  This should be an obvous part of parameterized derived types.  E.g.,
  if one creates a parameterized MATRIX type, it should be obvious that
  one might want an allocatable matrix for much the same reasons one wants
  allocatable arrays.

  The ISO varying string module demonstrated the difficulty of having to
  allocate a character array when what you really needed was a string
  whose length you could control.

  <SUGGESTED IMPLEMENTATION>
  CHARACTER(*), ALLOCATABLE :: C
  ...
  ALLOCATE ((LEN=L)C)

  <ESTIMATED IMPACT>

  <SUBMITTED BY> Kurt W. Hirchert, hirchert@ncsa.uiuc.edu

  <HISTORY>
  <EVENT> 29 April 96: submitted
  </HISTORY>

  </FORTREQ>

-- 
Kurt W. Hirchert     hirchert@ncsa.uiuc.edu
National Center for Supercomputing Applications
