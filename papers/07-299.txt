To:       J3                                                      07-299
From:     Jim Xia
Subject:  Interpretation: Deallocation and finalization of
          bounds-remapped pointers

Date: 2007 October 12

NUMBER:   F03/
TITLE:    Deallocation and finalization of bounds-remapped pointers
KEYWORDS: deallocate, finalization, bounds-remapping, pointer
DEFECT TYPE: Error
STATUS:   Erratum


INTRODUCTION:

Consider the following example assuming a derived type of X is declared
previously and made accessible to the current scoping unit,


    type(X), pointer :: a(:), b(:,:)

    allocate (a(100))
    b(1:10, 1:10) => a

    DEALLOCATE (b)

QUESTION:

    (a) Is DEALLOCATE (b) in the example intended to be standard
        conforming?

    (b) If the answer to (a) is yes, and also assume type X has
        finalizers of both rank-one and rank-two, then which finalizer
        should be invoked by the DEALLOCATE statement.


ANSWER:

    (a) Yes, the example is intended to be standard conforming.  The
        deallocation of pointer b should be executed successfully.

    (b) Standard is clear about how the finalizations processed in this
        case.  In 4.5.5.1, the first step in invoking the appropriate
        final subroutine requires a finalizer matching the rank of the
        entity being finalized.  In this case, object b is being
        finalized and therefore the rank-two final subroutine of type X
        will be invoked with object b as the actual argument.

EDITS:

    None.

SUBMITTED BY: Jim Xia

HISTORY: m182 Submitted
