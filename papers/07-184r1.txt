                                                                    07-184r1

To:          J3
From:        Van Snyder/Dick Hendrickson
Subject:     Comments on Clause 2
Date:        7 May 2007


1 Edits

Edits refer to07-007r1. Page and line numbers are displayed in the margin.
Absent other instructions, a page and line number or line number range
implies all of the indicated text is to be replaced by associated text,
while a page and line number followed by + (-) indicates that associated
text is to be inserted after (before) the indicated line. Remarks are
noted in the margin, or appear between [ and ] in the text.

[9:4-5] ------------------------------------------------------------------
[The immediately preceding subclause defines the notation used in the
standard. We don't find it necessary to specify where to find the notation
in the introductory waffle of any other clause. Editor: Delete "The
notation . . . 1.7."]

[9:8-9] ------------------------------------------------------------------
[It's not necessary to say this here and at [12:43]; it's more proper to
say it at [12:43]. Editor: Delete "A <program> . . . both."]

[12:29] ------------------------------------------------------------------
[Editor: Replace "a extension" by "an extension".]

[12:43] ------------------------------------------------------------------
[Editor: After "main program" insert ", which may be defined by a Fortran
<main-program> <program-unit> or by means other than Fortran, but not
both".]

[13:9] -------------------------------------------------------------------
[Editor: Replace "in" with "by" for consistency with the remainder of the
sentence.]

[13:10-12] ---------------------------------------------------------------
[Too complicated. Editor: Replace "Unless . . . function value" by "A
subroutine or function that is not pure may change the program state by
changing the values of any of the data objects accessible to it".]

[15:6] -------------------------------------------------------------------
[Editor: Delete "executable" after BLOCK.]

[16: Table 2.2]-----------------------------------------------------------
[What is the point of footnote 1? Scoping units are described only four
pages previously. If we must mutter about the relationship between
modules, submodules and scoping units, why not mutter about internal
subprograms, type definitions and interface bodies? Editor: Delete
footnote 1 and the reference to it.]

[17:17] ------------------------------------------------------------------
[Editor: Replace "¡end-program-stmt¿" by "<end-program-stmt>".]

[18:9] -------------------------------------------------------------------
[Editor: Delete "contained".]

[18:2422] ------------------------------------------------------------------
[Editor: Replace "the language" by "\thisstandard".]

[18:30] ------------------------------------------------------------------
[Editor: Replace "provide" by "create". Delete "data" since
we didn't bother with it at [18:27].]

[19:2] -------------------------------------------------------------------
[Editor: Replace "supplied by procedure definitions" by "defined by
procedures (7.1.6)".]

[22:15-20] ---------------------------------------------------------------
[There's no excuse to take two sentences for each of these concepts.
Besides, the stuff about disassociation isn't quite correct, and the
perfectly good descriptions in Clause 16 don't need to be repeated.
Editor: Replace the paragraph by the following:]

A pointer is <<associated>> with a <<target>> by pointer initialization (4.5.4.5, 5.2.3) or the events described in 16.5.2.2.1. A pointer is 
<<disassociated>>by explicit or default initialization to NULL(), 
or by the events described in 16.5.2.2.2. A disassociated pointer is not 
associated with a target.

[24:37] ------------------------------------------------------------------
[The term "global procedure" is not defined or used anywhere else. Editor:
Insert "external" before "procedures".]


--------------------------------------------------------------------------
No action on the following item

2 Question without answer

[16:11-13] ---------------------------------------------------------------
Shouldn't the sentence have or be followed by an "otherwise" part? Without
it, I don't see how the images get created. There also seems to be an
implicit connection between "instance" (which I thought was related to
recursive procedures) and "image".

