To: J3                                                     J3/23-144
From: Malcolm Cohen
Subject: Response to **-008
Date: 2023-February-23


**-008 "A definition must be able to replace its term in the text.
        The following cannot".

PREFERRED RESPONSE.

Reject. Nearly all of these are adjectives, and in general, whether the
definition is an adjectival clause or an adjectival phrase, nothing works
as a simple "drop-in" replacement: suitable (if obvious) modifications of
the context will always be needed.

This applies to the suggested "with"/"without" formulation as well as to
our existing "having/not having" formulation.

Rewording of some of these is certainly possible, but none of the
suggested rewordings are an improvement.


ALTERNATIVE RESPONSE.

Partially Accepted. The items will be reworded when possible.

3.41 contiguous,
    Change "having array elements in order that are not separated by other
            data objects, as specified in 8.5.7"
    to     "whose array elements, in order, are not separated by other data
            objects, as specified in 8.5.7".

3.42 contiguous
    Change
        "that the parts in order are not separated by other data objects"
    to  "whose parts, in order, are not separated by other data objects"

{Note to J3: Not actually an improvement in drop-in-ability, but a genuine
 adjectival clause.}

3.52, "has a valid value" -> "with a valid value"
{J3NOTE: Not an improvement in drop-in-ability.}

3.53, "has a pointer association status of associated or disassociated
       (19.5.2.2)"
      -> "whose pointer association status is associated or disassociated
          (19.5.2.2)"

3.62, "has a pointer association status of disassociated"
    -> "whose pointer association status is disassociated"
{This is definitely a disimprovement.}

Reject 3.74, - There is no better description.

Reject 3.93.1, 3.93.2 (but they are reworded by another comment).


3.150, "does not have a valid value" -> "without a valid value".
{ISO suggestion is not drop-in any more than current, e.g.
    "an exception is an undefined variable"
 does not make better sense as (the new)
    "an exception is an without a valid value variable"
 than it does with (the old)
    "an exception is an does not have a valid value variable"
 ...in any case, you need to modify the context so it reads
    "an exception is a variable that does not have a valid value".}

Reject 3.151 - using "without" here would be poor both technically,
grammatically, and stylistically.

3.154 "not having the SAVE attribute" -> "without the SAVE attribute".
{Not an improvement in any way.}

===END===


