To: J3                                                     J3/18-264
From: Van Snyder
Subject: Inconsistencies between LOCAL and BLOCK
Date: 2018-October-12

Introduction
============

C1128 prohibits a variable with LOCAL locality from having the
ALLOCATABLE attribute, from being finalizable, or from being a coarray.
11.1.7.5p1 specifies that a variable with LOCAL locality is a different
entity in every iteration of a DO CONCURRENT construct, and further
specifies that a construct entity within the DO CONCURRENT construct is
... "similar to LOCAL locality" (but not "as if LOCAL locality").  C1128
does not prohibit a variable declared within a BLOCK construct within a
DO CONCURRENT construct from having the ALLOCATABLE attribute, from
being finalizable, or from being a coarray.  This is inconsistent.

Edits
=====

[181:22 C1128 (eighth constraint after syntax rules in 11.1.7.2 Form of
the DO construct] Delete "LOCAL or".

[181:24 C1128] Before "A <variable-name>..." insert a sentence:

  "A variable that appears in a LOCAL <locality-spec> shall not have the
   INTENT(IN) or OPTIONAL attribute, shall not be a nonpointer
   polymorphic dummy argument, and shall not be an assumed-size array."

Question
========

Should this be an interp?  It does change technical content.
