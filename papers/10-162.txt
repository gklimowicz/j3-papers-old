                                                            J3/10-162
To: J3
From: Malcolm Cohen
Subject: Implicit interp request.
Date: 2010 June 01

----------------------------------------------------------------------

NUMBER:
TITLE: IMPLICIT
KEYWORDS: Finalization
DEFECT TYPE: Erratum
STATUS: J3 consideration in progress

QUESTION:

5.5 IMPLICIT statement contains the permission-giving statement:

    "The mapping may be to a derived type that is inaccessible in the
     local scope if the derived type is accessible to the host scope."

But what if the derived type is not accessible to the host scope?

Consider the program:

  module m
    implicit type(t) (a-z)
    type t
      real x
    end type
  contains
    subroutine s(x)
      type t
        character(10) c
      end type
      call inner(x)
    contains
      subroutine inner(z)
        a = x
        b = y
        print *,a%x,b%x
      end subroutine
    end subroutine
  end module

In inner, the mapping is not to a derived type that is accessible to
the host scope.

Is this program valid?

ANSWER:

Yes.  The statement apparently giving permission is in error: no
permission needs to be given here, it simply follows from the other
scoping rules.

An edit is provided to clarify the standard.

EDITS to 10-007:

[109:21-22] (5.5p4)
  Delete the confusing sentence "The mapping may ... scoping unit.".

ALTERNATIVE EDIT:

In that same confusing sentence, delete the condition
  "if the derived type is accessible to the host scope"
and insert the word "default" before "mapping", making it
  "The default mapping may be to a type that is inaccessible in the
   local scope."

SUBMITTED BY: Malcolm Cohen

HISTORY: 10-nnn   m192 Submitted

----------------------------------------------------------------------
