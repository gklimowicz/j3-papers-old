To: J3                                                     J3/18-185
From: Malcolm Cohen
Subject: Response to GB-020
Date: 2018-June-11

1. Introduction

Comment GB-020 observes that the current wording of C1151 permits the use
in SELECT RANK of a RANK selector with a higher value than 15, viz it
limits the rank value to "the maximum possible rank of selector".
On a processor that supports rank higher than 15 (as an extension),
this constraint is not violated and therefore does not require diagnosis.

However, the maximum rank supported by processors varies.  It would
make library routines that support up to the maximum rank of the processor
more portable if they were permitted to exceed that rank.  This would
be harmless as those cases would simply never be executed.

This is a Technical Change.

Apart from removing the constraint, we need to deliberately permit this,
noting that it simply means the block will never be executed, so that
vendors know to implement it properly.


2. Response to GB-020

Accepted as is.


3. Edits to N2146

Page 199, 11.1.10.1 Purpose and form of the SELECT RANK construct,
constraint C1151,
  delete "and less than or equal to the maximum possible rank of selector"
making the whole constraint read
  "C1151 A scalar-int-constant-expr in a select-rank-case-stmt shall be
         nonnegative."

Page 200, same subclause, after paragraph 2, insert a new paragraph
  "The <scalar-int-constant-expr> in a <select-rankcase-stmt> may have a
   value greater than the maximum possible rank of selector; in this case,
   its block will never be executed."

===END===
