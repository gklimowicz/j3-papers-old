
                                                J3/05-235r2

Date: 09 August 2005
To:   J3
From: Rob James
Subject: Specification, syntax and edits for contiguous attribute
References: Feature j3-043, 05-149r2, 05-186
----------------------------------------------------------------------


Summary:
--------

Provide a method to indicate that the target of a pointer or an actual
argument is contiguous.


Specification and Syntax:
-------------------------

Provide a declaration attribute, CONTIGUOUS, that specifies that
the pointer being declared will only be associated with a target
occupying a storage sequence or that the elements of an
assumed-shape dummy argument occupy a storage sequence. The
processor may need to make a contiguous copy of an actual argument
associated with a dummy argument with the contiguous attribute.
For example,

      real, pointer, contiguous        :: sptr(:)
      real, contiguous, dimension(:,:) :: d

A corresponding CONTIGUOUS :: <object-name-list> statement is also
provided.

An intrinsic function, IS_CONTIGUOUS(A), is also provided. The
argument is an array or array section.  The result is .true. if the
argument occupies a storage sequence, and .false. otherwise.



Edits:
------

Note:  < and > are used to delimit italic font. << and >> are
used to delimit bold font.  All page and line numbers refer to
j3/04-007.

.....................................................................

In the Introduction section (page xiii), the list of new Fortran
2008 features should include

Performance enhancements: CONTIGUOUS attribute

.....................................................................

In section 1.6 Compatibility, there are no changes needed.

.....................................................................
71:20+. In the list of allowed <attr-spec> (R503) add:

     or CONTIGUOUS

.....................................................................
72:29+. Add three new constraints:

C512a (R501) If the CONTIGUOUS attribute is specified, the POINTER
attribute shall also be specified, or the <entity-decl> shall be an
assumed-shape array.

C512b (R501) If the CONTIGUOUS and POINTER attributes are specified,
the <entity-decl> shall be a data object.

C512c (R501) If the CONTIGUOUS attribute is specified, the
<entity-decl> shall not be polymorphic.

.....................................................................
78:2-. Add a new subsection:

5.1.2.4a  CONTIGUOUS attribute

The <<CONTIGUOUS attribute>> specifies that an assumed-shape array
is argument associated only with an object that forms a storage
sequence (16.4.3.1) or that the target of an associated pointer
forms a storage sequence.

A pointer with the CONTIGUOUS attribute shall become associated only
by successful execution of an ALLOCATE statement referencing the
pointer or by pointer-assignment to a target that forms a storage
sequence.

If an assumed-shape array with the CONTIGUOUS attribute is argument
associated, it shall be associated with an object that forms a
storage sequence. The processor may need to make a contiguous copy
of an actual argument associated with a dumy argument with the
CONTIGUOUS attribute.

Note 5.10a

The CONTIGUOUS attribute allows a processor to enable optimizations
that depend on the memory image of the object occupying a logically
contiguous block of memory.  Examples of CONTIGUOUS attribute
specifications are:

   REAL, POINTER, CONTIGUOUS        :: SPTR(:)
   REAL, CONTIGUOUS, DIMENSION(:,:) :: D

[end Note]
.....................................................................
87:12+. Add a new subsection:

5.2.4a  CONTIGUOUS statement

R523a  <contiguous-stmt>  is  CONTIGUOUS [::] <object-name-list>

The CONTIGUOUS statement specifies the CONTIGUOUS attribute
(5.1.2.4a) for a list of objects.

.....................................................................
296:15+. Add a new function to the list in 13.5.8 of Other inquiry
         functions:

IS_CONTIGUOUS(ARRAY)     Storage sequence status

.....................................................................
325:7+. Add a description for a new intrinsic function:

13.7.56a  IS_CONTIGUOUS(ARRAY)

Description: Determine whether an array occupies a storage sequence.

Class: Inquiry function.

Argument: ARRAY may be of any type. It shall not be a scalar. It
shall not be an unallocated allocatable or a pointer that is
not associated.

Result Characteristics: Default logical scalar.

Result Value: If ARRAY occupies a storage sequence the result is
.true., and is .false. otherwise.

.....................................................................
416:7. Replace "In a storage association context" with
       "Objects occupy storage units as follows:"
