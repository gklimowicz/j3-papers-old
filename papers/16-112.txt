                                                             J3/16-112
To:         J3 Members
From:       Bill Long
Subject:    Clause 4 edits
Date: 2016 January 18
References: 16-007

Discussion:
----------

In 4.3.1, para 3, we have "Assignment (7.2) provides one means of
defining or redefining the value of a variable of any type.". Normally
we don't talk about defining a value. Variables get defined, but not
values.  Two alternative rewordings are provided.

Note 4.3 lists places where <type-spec> is used.  It omits the DO
CONCURRENT construct. This was an oversight in Fortran 2008 where this
capability was added for FORALL but this same note was not updated.

In 4.5.1p2 we say that a derived type may be parameterized by
"multiple" type parameters. It may also be parameterized by just one
type parameter. Might consider "one or more" to emphasize that the
case of one is permitted.

We typically insert the space in "DOUBLE PRECISION". In one case, we
don't. Proposed to change that case to be consistent.

Variables with LOCAL or LOCAL_INIT locality are automatically
"local". Propose to remove a redundancy in the subclause on
finalization.

Edits to 16-007:
-----

[53:6] in 4.3.1 Relationship of types and values to objects, para 3,
last sentence, "defining or redefining the value of a variable", either

1) change "defining or redefining" to "specifying", or

2) delete "the value of".


[53:29+] In 4.3.2.1 Type specifier syntax, Note 4.3, after "array
constructor, ", insert "a DO CONCURRENT statement, ".


[62:26] In 4.5.1 Derived type concepts, para 2, change "multiple" to
"one or more".


[63:23] In 4.5.2.1 Derived-type definition/Syntax, first constraint
(C430) change "DOUBLEPRECISION" to "DOUBLE PRECISION".


[78:28] In 4.5.6.3 When finalization occurs, para 5, change "local
variable" to "variable".




