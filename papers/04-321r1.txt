
                                                            J3/04-321r1

Date:    10th August 2004
To:      J3
From:    Malcolm Cohen
Subject: Component value for pointer components

NUMBER: 
TITLE: Component value for pointer components
KEYWORDS: component, value, pointer
DEFECT TYPE: Interpretation
STATUS: J3 consideration in progress

QUESTION: According to 4.5.7, the component value for an
allocatable component includes the bounds if the component
is allocated.  However, no mention is made of the bounds
of pointer components.  It is possible for pointers with
different bounds to be associated with the same target
(13.7.13); therefore, I conclude that the bounds are not
part of the association.

Is it standard conforming for a processor to print 1 as
a result of the following program?

  program me
    type t
      integer, pointer :: p(:)
    end type t
    type(t) :: x
    allocate(x%p(3:5))
    call sub(x)
  contains
    subroutine sub(y)
      type(t), value :: y
      write (*,*) lbound(y%p)
    end subroutine sub
  end program me

ANSWER:

No, a processor is required to print 3 as a result of the above
program.  The conclusion that the bounds are not part of a pointer's
association is incorrect.

DISCUSSION:

The analysis appears to be based on the theory that the ASSOCIATED
intrinsic function defines what is meant by "pointer association".  In
fact, the 1-argument form of that function only returns the pointer
association *status*, and the 2-argument form only tests the association
between a pointer and a target - it does not compare the pointer
association of two pointers.

If the bounds were not part of "pointer association", non-component
pointers would be similarly faulty.

Pointer association is established by the ALLOCATE statement (6.3.1.2) and
pointer assignment (7.4.2.1).  Both of these specify array bounds
for the association.  These are the defining sections for pointer
association, and therefore, the bounds form part of that association.

It could be recommended that a future revision of the standard contain
a more comprehensible definition of the term "pointer association".

EDITS:

None.

SUBMITTED BY: Richard Maine

HISTORY: J3/04-321   m169 Submitted
         J3/04-321r1 m169 Revised
