




      To: J3							    J3/98-234r1
      From: R. Bleikamp/JOR                                         page 1 of 1
      Subject: Environment Variable Edits / M.18b
      Date: 98-11-10
	
      Related papers: 97-151r1, 97-153, 97-201, 97-203, 98-115, 98-163r1 (specs).
	
      Edits against 98-007r3.

      [263:7] (after section 13.11.3), add a new section

	"13.11.4  Environment variable subroutine

	The subroutine GET_ENVIRONMENT_VARIABLE returns the value of an enviroment
	variable.  An environment variable is a named object defined via some
	mechanism outside the scope of this standard, typically by some
	command or action in a user interface."

      [267:4+]  (after the 2 line DATE_AND_TIME entry), add

	"GET_ENVIRONMENT_VARIABLE (NAME			Obtain the value of an
	    [, VALUE] [,LENGTH] [,TRIM_NAME])           environment variable."


      [283:34+] just before HUGE's entry, add the following:

	"13.14.40  GET_ENVIRONMENT_VARIABLE (name [,value][,length][,trim_name])

	 Description.  Get the value of an environement variable.

	 Class: Subroutine.

	 Arguments:
	
	 name: shall be scalar and of type default character.  It is an
	        INTENT(IN) argument.
	
	 value (optional): shall be a scalar variable of type default
	      character.  It is an INTENT(OUT) argument.  The value of the
	      environment variable specified by "name" is returned in this
	      argument. The value is blank padded on the right if the value is
	      shorter than LEN(value).  The leftmost LEN(value) characters of the
	      environment variables value will be stored in "value" if the value
	      is longer than LEN(value).

	      "value" will be assigned all blanks if the environment variable does
	      not exist, does not have a value, or the processor does not support
	      environment variables,

	 length (optional): shall be a scalar variable of type default integer.
	      It is an INTENT(OUT) argument.  "length" is set to either the length
	      of the specified environment variable, -1 if the specified
	      environment variable was not present, or -2 if the processor does
	      not support enviroment variables.  The processor may return other
	      negative values in "length" for other error conditions.

	      If specified environment variable was present, but had no value,
	      "length" is set to zero.
  
	 trim_name (optional): shall be a scalar of type logical.  It is an
	      INTENT(IN) argument.  If "trim_name" is present with the value
	      false, trailing blanks in "name" are considered significant if the
	      processor supports significant trailing blanks in an environment
	      variable name.  Otherwise, trailing blanks in "name" are not
	      considered part of the environment variable's name."
