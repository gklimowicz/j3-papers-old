                                                             J3/15-196
To: J3
From: Bill Long & John Reid
Subject: N2065 (TS Ballot Result) reply - part 2
Date: 2015 August 04
Reference:  WG5/N2056, WG5/N2065

-------------

Discussion:

WG5/N2065 is the result from ISO from the ballot on WG5/N2056 TS 18508
Additional Parallel Features in Fortran.  This paper addresses some of
the edits proposed in the ballot responses.


Edits to WG5/N2056:
-------------------

DE2[10:17-18] In 5.3 CHANGE TEAM, move the two sentences of para 3,
following the constraints, "A coselector name ... statement begins
execution." to be the first two sentences of the para 5 that currently
begins "A <codimension-decl> in a <coarray-association>...".

GB7[18:4+] In 7.3 EVENT POST, replace Note 7.2 by "The completion of
an EVENT POST statement does not depend on the execution of a
corresponding EVENT WAIT statement".

GB8[18:21-24] In 7.4 EVENT WAIT, replace the para following the
itemized list, beginning "If an EVENT WAIT..." by "An EVENT POST
statement execution is initially unsatisfied.  Successful execution of
an EVENT WAIT statement with a threshold of <k> satisfies the first
<k> unsatisfied EVENT POST statement executions for that event
variable.  This EVENT WAIT statement execution causes the segment
following the EVENT WAIT statement execution to succeed the segments
preceding those <k> EVENT POST statement executions."

GB9[18:25] In 7.4 EVENT WAIT, delete the final sentence, "A failed
image...statement.", before the first Note.

GB10[18:25++] In 7.4 EVENT WAIT, delete the second note, Note 7.4.

GB15[27:15] In 8.4.15 EVENT_QUERY, in the description of the EVENT
argument, after "ISO_FORTRAN_ENV." insert a new sentence "It shall not
be coindexed."
{Disallowing a coindexed event argument in EVENT_QUERY makes it
consistent with EVENT WAIT.}

GB15[27:22] In 8.4.15 EVENT_QUERY, in the first sentence of the Example,
after "posts or waits", add "in preceding segments , and for which
there are no posts or waits in an unordered segment".

GB15[27:25] In 8.4.15 EVENT_QUERY, in the second block of text of the
Example, replace "EVENT[2]" by "EVENT".

GB15[27:26] In 8.4.15 EVENT_QUERY, in the second block of text of the
Example, after "specification" add "in preceding segments, and for
which there are no posts or waits in an unordered segment".

GB15[27:27] In 8.4.15 EVENT_QUERY, in the second CALL statement of the
Example, replace "EVENT[2]" by "EVENT".

GB16[51:13-14] In A.3.2 EVENT_QUERY example, replace the statements

  CALL EVENT_QUERY(submit[i],count,STAT=status) ! Test image i
  IF (status==STAT_FAILED_IMAGE) CYCLE

by

  IF (IMAGE_STATUS(i) == STAT_FAILED_IMAGE) CYCLE



GB16[51:24-25] In A.3.2 EVENT_QUERY example, replace the statements

  CALL EVENT_QUERY(submit[i],count,STAT=status) ! Test image i
  IF (status==STAT_FAILED_IMAGE) THEN      ! Image i has failed

by

  IF (IMAGE_STATUS(i) == STAT_FAILED_IMAGE) THEN



GB16[51:47-52] In A.3.2 EVENT_QUERY example, replace the lines

  CALL EVENT_QUERY(submit[i],count,STAT=status) ! Test image i
  IF (status/=STAT_FAILED_IMAGE) &
            work_item[i] = create_work_item(kk)
  EVENT POST (submit[i],STAT=status)
  ! If image i has failed, this will not hang and the failure
  ! will be handled on the next iteration of the loop


by

  work_item[i] = create_work_item(kk)
  EVENT POST (submit[i],STAT=status)
  ! If image i has failed, the failure will be handled on
  ! the next iteration of the master loop.
