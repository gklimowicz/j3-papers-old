                                                             J3/15-141
To:        J3
From:      Van Snyder
Subject:   Interpretation concerning OPTIONAL and ALLOCATABLE
Date: 2015 February 22

----------------------------------------------------------------------

NUMBER: F08/0133
TITLE: Is unallocated actual associated with nonallocatable dummy OK?
KEYWORDS: OPTIONAL, ALLOCATABLE
DEFECT TYPE: Erratum
STATUS: J3 consideration in progress

QUESTION:

Does the following program conform to the 2008 standard?

program P
  integer, allocatable :: I(:)
  call s ( i )
contains
  subroutine S ( A )
    integer, intent(in), optional :: A(:)
    if ( present(a) ) then
      print *, 'A = ', a
    else
      print *, 'A is not present'
    end if
  end subroutine S
end program P

Subclause 6.7.1.3 says, concerning an unallocated allocatable variable,
"It shall not be supplied as an actual argument corresponding to a
nonallocatable dummy argument, except to certain intrinsic inquiry
functions."

On the other hand, subclause 12.5.2.12 says a dummy argument "is not
present if the dummy argument ... does not have the ALLOCATABLE ...
attribute, and corresponds to an actual argument that ... has the
ALLOCATABLE attribute and is not allocated...."

ANSWER:

The intent was that the program conforms, and prints "A is not present",
as specified by subclause 12.5.2.12.  Edits are provided to correct this
mistake.

EDITS:

[10-007r1:129:8 6.7.1.3 p1, second item in bulleted list] Insert
"nonoptional" before "nonallocatable".

{Optional editorial fiddling:}

[10-007r1:129:8 6.7.1.3 p1, second item in bulleted list] Delete
"supplied as"; replace "corresponding" with "that corresponds".

SUBMITTED BY: Van Snyder

HISTORY: 15-xxx    m206  F08/0133 submitted

----------------------------------------------------------------------
