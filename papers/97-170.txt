
                                                             J3/97-170

Date:       May 13, 1997
To:         J3
From:       Interval 1
Subject:    Properties of a good interval arithmetic standard
Reference:  J3/97-158

It is a consensus among experts and users of interval arithmetic
that a good standard should have the following properties:

        1) Guaranteed containment.  This implies:

                a) Context sensitive mixed mode or no mixed mode
                b) .SEQ. cannot be the default.  The default must be
                   .CEQ. or there can be no default for .EQ. and .NE.

        2) Speed.  This implies:

                a) An intrinsic implementation must be at least an option.

                b) It shall be implicit that all intrinsic functions shall
                   not trap or return an empty interval [NaN, NaN] unless
                   an interval argument is strictly outside the function's
                   domain.  (For non-IEEE platforms, returning [TINY, HUGE]
                   will work to signal that things have gone badly somehow.)
                   A paper on this item is forthcoming.

        3) Sharpness.  This implies:

                a) Mathematically equivalent compile-time transformations
                   that do not violate containment. (See J3/97-158.)
                   Intervals need to be distinguished as single-valued
                   or multi-valued.
                b) No accuracy requirement or requirement to get particular
                   results other than containment.

        4) Convenient syntax.  This implies:

                a) I/O should not be ugly for the sake of making a module
                   implementation possible.
                b) Operator precedence must make sense, and therefore be
                   specifiable.

The intersection of these requirements logically implies an
intrinsic implementation.