                                                             J3/14-162r1
To:      J3
From:    Van Snyder
Subject: Even more editorial (?) stuff.
Date: 2014 May 30

Edits with respect to 14-007r1
------------------------------

[19:30 1.3.149.6] Replace "clause" with "<type-attr-spec>".

[19:43 1.3.149.10] Replace "clause" with "<type-attr-spec>".

[34:1 2.3.2p1] Replace "clause" with "subclause".

[70:5,7 4.5.4.2p1] Replace "clause" with "<component-attr-spec>" twice.

[70:10,11 4.5.4.3p1] Replace "clause" with "<component-attr-spec>" twice.

[100:8-9] Delete C547, which is overkill because the associated actual
argument is covered by C1303, C1304, and 16.6.7 "Variable definition
context."

[129:8 C642] There is a cross reference to type LOCK_TYPE in C643, but
none to C_PTR or C_FUNPTR in C642 or C643.  If one is needed at all,
it's only needed in C642.  Insert "(15.3.3)" after "C_PTR" and
"C_FUNPTR" -- or delete "(13.8.2.16)" at [129:9].

[213:31 C929] Insert "exponent" after "decimal" for consistency with
numerous other places (e.g., [382:1]) where the same concept is
required.

[312:9 12.6.2.6p7] Replace "clause" with "suffix".

[312:12 12.6.2.6p8] Replace "clause" with "suffix".

[315:10 C12101] Delete C12101 because a <stop-stmt> is an image control
statement, which is prohibited by C12102.

[318:26-27 13.2.4p1] Remove "The DIM argument of a reduction function is
not permitted to be an absent optional dummy argument."  The DIM
argument of every reduction function is now non-optional, so the
sentence doesn't add anything to what the ordinary rules for optional
arguments already do.

[386:17 13.7.145p5] It's not obvious what "this result is within range"
means.  "Within range" of what?  Replace "this result is within range;
if not" with "$X = 0$ or TINY(X) $\leq | X \times b^I | \leq$ HUGE(X);
otherwise".

[388:20,22,23,25 13.7.149p7] Before "exponent" insert "decimal" four
times, so as to avoid any confusion that the exponent might be in radix
RADIX.

[395:8 13.7.167p4] Replace "is present" with "appears" because DIM is
not optional.

[402:25 C1303] Insert "in an ALLOCATE statement without a SOURCE=
specifier, as an <allocate-object> in a DEALLOCATE statement" after
"<allocate-object>" for consistency with C602 on EVENT_TYPE in TS 18508.

{Does this instead need an interp?  Does it need to be in the
incompatibility list in 1.6.3?}

[402:26,29 C1303, C1304] Replace "where" with "if" twice.

[402:27 C1304] Insert "in an ALLOCATE statement without a SOURCE=
specifier, as an <allocate-object> in a DEALLOCATE statement" after
"<allocate-object>" for consistency with C603 on EVENT_TYPE in TS 18508.

{Does this instead need an interp?  Does it need to be in the
incompatibility list in 1.6.3?}

[402:29+ C1304+ 13.8.2.16] To improve on the protection in C435, insert
a paragraph

  "The value of the actual argument associated with the CPTR argument of
   the C_F_POINTER subroutine from the ISO_C_BINDING intrinsic module
   shall not be the address of a variable of type LOCK_TYPE."

{Should this be a feature request?  Does this need to be added to the
intro and/or compatibility subclause?}

[419:9,11,12,13 14.11.18p6] Before "exponent" insert "decimal" four
times, so as to avoid any confusion that the exponent might be in radix
RADIX.

[436:4,6 C1501, C1503] Combine the constraints and add ABSTRACT:

"C1501 (R425) A derived type with the BIND attribute shall not have the
       ABSTRACT, EXTENDS or SEQUENCE attribute."

{C435 already says an abstract type shall be extensible.  But we
presumably put C1501 etc. in 15.3.4 to make it easy to find all of the
constraints on the BIND attribute for derived types.  4.5.2.1p1 says
"Derived types with the BIND attribute are subject to additional
constraints as specified in 15.3.4."  But C435 is in 4.5.2.1, and
requires one to look in 4.5.7 to discover its relationship to BIND.}

[461:18-19 16.3.3p1] Replace "clause" with "suffix" twice.
