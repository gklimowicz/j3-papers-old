
                                                    J3/05-156

Date:    2005-02-07
To:      J3
From:    Malcolm Cohen
Subject: Disposition of editorial suggestions

These suggestions are all from 05-105r1, unless otherwise noted.

> [xiii, item(3)]: "complex" => "complicated".

Agreed.


> [10:53] The term ``construct'' is used frequently, but its only
> definition is in the glossary.  Create a syntax term that precisely
> defines the plain-English term:
>
>             <<or>> <construct>
> <construct> <<is>> <associate-construct>

Rejected.  This is not a sufficient reason to create an extra syntax term.

There is nothing wrong with using "construct" when it is
  (a) explicitly qualified by the kind of construct under discussion
  (b) implied by context which kind of construct is under discussion
  (c) applicable to any construct, or to any construct which possesses
      other qualities required by the context.

If there is any actual problem here, I'd like to see it.
Otherwise I'd rather leave well-enough alone.

>[26:40] The term ``be given to'' is meaningless.  Replace it by ``identify''.

Rejected.  I disagree that "be given to" is meaningless.  Using "identify"
here would cause problems of interpretation, because a statement is
apparently only "identified" by a label if it can be used to refer to that
statement (see [27:2-7]).

> [50:26] "attribute nor the" => "nor".

There are other occurrences of similar wording, but inconsistent;
I've put this into "Under consideration".

> [73:11] Insert "The" or "An" after (R504) -- or at least insert a space.

A space will be inserted.

> [74:25] "alternatively may" => "may alternatively"

This will be made globally consistent (there are two appearances of
"may alternatively be" and three of "alternatively may be".

> [86:13] Remove excessive space between "module." and "The" (caused by
> consecutive \mindex items with a blank or newline between them).

I agree.

> [158:1] Remove excessive space between "The" and "CASE" (caused by
> consecutive \mindex items with a blank or newline between them).

I presume you mean [158:2].  I agree.

> [163:6] Insert "kind" after "and"

Agreed.

>[167:25] Remove excessive space between "a" and "CYCLE" (caused by
>consecutive \mindex items with a blank or newline between them).

Agreed.

>[168:4] Remove excessive space between "an" and "EXIT" (caused by
>consecutive \mindex items with a blank or newline between them).

I presume you mean between "The" and "EXIT", since the quoted text
does not appear on that line.  Agreed.

>[168:12-19] Add a comma at the end of each item, then add "or" after
>the comma at the end of item (5).

I agree that this is poor, but the fix is wrong because it then leaves
every clause beginning with a capital letter.  It would be better just
to put a full stop at the end of every item.

I've entered this into "Edits under consideration" and will decide
exactly what to do later.

> [169:9]Set ``or'' in full-size type.

Agreed.

>[170:18] Remove excessive space between "a" and "CONTINUE" (caused by
>consecutive \mindex items with a blank or newline between them).

Agreed.


> [211:7+] Insert a constraint parallel to C946 at [209:12-13].

This really should be an interp.

But since the constraint exists for all the other i/o statements, I'll
add it to the list.

>[267:15-17] Should be identical to C727 @ 144:5-6.

I agree that these two should be identical, but I'm less convinced that
C727 is the more readable.  Entered into "under consideration".

> [267:20] There's only one <label> in the one-line syntax rule referenced
> in the constraint.  Delete "used in the <alt-return-spec>".

Agreed.

> [292:26] Remove excessive space between "a" and "model" (caused by
> consecutive \mindex items with a blank or newline between them).

Agreed.

> [409:21] Replace the hyphen in "implied-DO" by a blank (the term isn't
> used as an adjective).

Agreed.

>[409:27] "index-name" => "<index-name>"

This was already present in the 008, but with an incorrect reference
(now corrected).

>=======================================================================
>The index needs significant focused coordinated attention.

This should be a proposal.

I have reviewed the index items suggested, and some of them have become
agreed edits.  However, given the level of review work that was necessary,
plus the fact that indexing the document before performing substantial changes
on it is not cost-effective, I hereby rule any further ad hoc index edits out
of order.  They will be rejected out of hand unless and until an indexing
proposal is accepted.  If such a proposal is made and accepted I will propose
forming an indexing subcommittee which will review the document and index on a
rigorous chapter-by-chapter basis (including any ad-hoc suggestions that are
made to them, but that will not be the basis of the review).

> [45:8, 70:10] Add an index item for statements!TYPE.

Agreed on [45:8], disagree on [70:10] (which should be [71:10] anyway).
The second one is not a TYPE statement; we don't index "statements!INTEGER"
or "statements!REAL".

> [75:7] Add an index item for TYPE.

Disagree.  We don't index bare keywords.  This is already correctly indexed,
on this very page, as "TYPE type specifier".

> [160:2] Add an index item for statements!ASSOCIATE.

Agreed, but [160:7] is probably a better place (where it first appears).

> [162:2] Add an index item for SELECT TYPE and statements!SELECT TYPE.

Rejected the first, agreed on the second, but [162:6] is I think a better
place.

> [163:6] Add an index item for statements!TYPE IS.

No.  The syntax is at [162:16], so I've indexed it there instead.

>[163:7] Add an index item for statements!CLASS IS.

Similarly.

>=======================================================================
>Are these editorial or technical?

These are editorial, but non-trivial.

>[83:24+] Define <<pointer association>>.
>
>[280:23-25] Delete "The specifications ... (12.2)" because it duplicates
>12.2.  If "information in the procedure heading" includes RECURSIVE --
>which appears not to be excluded -- it's incorrect as well.
>
>[407:24ff] 16.2.3 belongs in 12.3.2 (perhaps with constraints, since it
>won't be in 16 any more).

I've added all of these to a new section "For future consideration".
When they've become less waffly they will get moved into "Under consideration".

>=======================================================================
>Question without answers
>
>[148:4-5] What if <expr> is scalar?

That doesn't sound like an editorial question!

Anyway, the value of a scalar <expr> corresponds with all the elements of
the mask... so as long as one reads "corresponding elements of <variable>"
as corresponding with the relevant mask elements it is ok.

I don't think it is possible to make it clearer without splitting the
broadcast case away from the array case.  That seems unnecessary.

05-105 had the question:

>[341:13+] Should procedure pointers be in the table?

which was removed from 05-105r1, so no action (it didn't really make sense).

=================================Not from 05-105r1

>1. Problem: Note 7.1 uses obsolete non-existent syntax terms, and does not
>            include examples of new syntax terms.  In particular,
>                 <constant-subobject> and <variable>
>            have become
>                 <designator>
>            and we have new
>                 <type-param-inquiry> and <type-param-name>
>
>   Solution: Change <constant-subobject> and delete <variable> (the former
>             example seems more useful).
>             Insert example of <type-param-inquiry>.
>             We could ignore the <type-param-name>, but for completeness I've
>             added it.
>
>   Edits: [117:27+5] Replace "<constant-subobject>" by "<designator>"
>          [117:27+6] Delete.
>          [118:1-1-] Insert new lines to Note 7.1
>            "X%KIND        <type-param-inquiry>
>            "KIND          <type-param-name>".

Agreed.

>2. Fix item 21 in 16.5.5
>3. Delete C530 as being redundant with C1238.

Both to go into "For future consideration".

> The sentence at [411:36] is redundant and incomplete.

Added to "For future consideration".

> The citations to the International Fortran Standards for F66 and F77
> are wrong.

Added to "Agreed post-publication edits".

>Statement and construct entities (16.3) aren't scoping units, but 409:37,
>409:42, 410:2 and 410:11 appear to contradict 12:1-3.  At those four places,
>should "scoping unit of" be "scoping unit containing"?

I think so.  Added to "Under consideration" (I want to think about the
wording a little more).

===END===
