
                                                    J3/03-183

Date:     2 Apr 2003
To:       J3
From:     Richard Maine
Subject:  Action on UK E comments

The UK comments E1, E8, and E22 are addressed by separate
papers.  E4 was withdrawn.  This paper deals with all the
other UK E comments, which are detailed in N1506.

The following UK E comments are accepted as is

  E2, E3, E5, E6, E10, E12, E13, E17, E20, E21

The following UK E comments are accepted with minor mods
as described below

  E9 - Make the same change on 200:1,17.

  E14 - Use "precisely" instead of "closely" in the replacement.

  E16 - Change the first part of the edit to read
        "IEEE_INVALID is not required to be supported whenever
         IEEE_EXCEPTIONS is accessed.  This is to allow a
         non-IEEE processor..."

  E19 - In the new text, change
        "(if a floating-point value)" -> "(if floating point)"
        "(if some other type of value)" -> "(if another type)"

The following UK E comments are rejected on technical grounds
as described below.  If my evaluation of the technical issue
is incorrect, that will need addressing by a technical subgroup.

  E7 - I think this technically wrong.

       Scale factor is also a mode.  Just because it can't be
       set in an OPEN statement doesn't meant we don't want to
       describe how it works.  In particular, the last sentence of
       this section is probably not otherwise covered anywhere for
       scale factor.

  E11 - This makes no sense to me.  Perhaps the sentence might
       be improved, but not like this.  The rationale makes no
       sense because it suggests xrefing 9.5.4 for something that
       isn't there.  I think this "fix" adds more confusion than it
       fixes.  The sentence does not mean that the wait operation
       causes one of the things listed in 9.5.4 to happen.  Indeed,
       that xref is explicitly misleading and confuses operations
       and statements.  The sentence in question is about terminating
       pending operations, not about terminating statements.

  E15 - That's a technical change instead of an editorial one.
       I think the change is just plain wrong; such things are
       never intrinsic.  If we do this, must make sure that this
       wasn't the only place that specified this about the standard
       intrinsic modules.

  E18 - Possibly, with fixes.  If we are going to say this about
       intrinsic functions, shouldn't we also say the more fundamental
       thing about intrinsic operations?  As is, I think both are
       assumed, but if we explicitly say only one, that might indicate
       that the other is not true.  Also, I don't see that it has
       much to do with the rest of this para; should be a separate one.
