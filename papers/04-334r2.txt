
                                                            J3/04-334r2

Date:    10th August 2004
To:      J3
From:    Malcolm Cohen
Subject: VALUE attribute for passed-object dummy arguments

NUMBER:
TITLE: VALUE attribute for passed-object dummy arguments
KEYWORDS: VALUE, passed-object, dummy argument
DEFECT TYPE: Erratum
STATUS: J3 consideration in progress

QUESTION:
Consider the following program:

      module m
        type t
          integer :: id
        contains
          procedure :: doThings => doThingsT
        end type
      contains
        subroutine doThingsT (a)
          class(t), value :: a
          a%id = 5
        end subroutine
      end module

      program p
        use m
        type(t) :: z = t(1)
        call z%doThings
        print *, z%id
      end program

Section 12.4.1.1 of Fortran 2003 states:
  In a reference to a type-bound procedure that has a passed-object
  dummy argument (4.5.3.3), the <data-ref> of the <function-reference>
  or <call-stmt> is associated, as an actual argument, with the
  passed-object dummy argument.

This seems to be contrary to the idea of the VALUE attribute.  For
argument association where the dummy argument has the VALUE attribute,
section 12.4.1.2 of Fortran 2003 states:
  If the dummy argument has the VALUE attribute it becomes associated
  with a definable anonymous data object whose initial value is that
  of the actual argument. Subsequent changes to the value or
  definition status of the dummy argument do not affect the actual
  argument.

It looks like the passed-object dummy argument is argument associated
with the object z itself, rather than an anonymous data object whose
initial value is that of z.

What value should the above program print?

ANSWER:
This program was not intended to be standard-conforming; the VALUE
attribute is not appropriate for a passed-object dummy argument.  Edits
are supplied to clarify this situation.

DISCUSSION:
As perhaps evidenced by its own name, the passed-object dummy argument
was intended to be THE object through which the type-bound procedure
was invoked.  It performs the same function as the "self" or "this"
variable of other object-oriented languages.

EDITS:
All edits refer to 04-007.
[53:1] Append to constraint "It shall not have the VALUE attribute."

SUBMITTED BY: Rob James

HISTORY: 04-334   m169 Submitted
         04-334r1 m169 Revised
         04-334r2 m169 Revised
