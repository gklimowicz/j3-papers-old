                                                                   J3/99-216r1

Date:     1999/07/12
To:       J3
From:     /DATA
Subject:  Interpretation request 70 on constant spec. expressions

NUMBER: 000070
TITLE:  Asymmetry between constant specification and initialization expressions
KEYWORDS:  Initialization expressions; specification expressions
DEFECT TYPE: Erratum
STATUS: J3 consideration in progress

QUESTION:
Consider the following programs.

      PROGRAM P1
        REAL :: B = 4.0*ATAN(1.0)
        PRINT *, B
      END PROGRAM P1

      PROGRAM P2
        INTEGER :: A(INT(4*ATAN(1.0))) = 17
        PRINT *, A
      END PROGRAM P2

According to 7.1.6.1 program unit P1 is not standard-conforming because of the
reference to the intrinsic function ATAN which is not permitted in an
initialization expression.

According to 7.1.6.2 program unit P1 is standard-conforming; the reference to
the intrinsic function ATAN is allowed by item (8) in the definition of a
restricted expression.  Expressions in the array bounds of an initialized
entity are only required to be constant specification expressions, not
initialization expressions.

Was it the committee's intent to permit ATAN to appear in the array bounds of
an initialized entity but not in the initialization value?

ANSWER:

No, this was not the intent.  These expressions should have been described
as initialization expressions instead of as constant expressions.

This error also occurs for the definitions of an automatic entity, common block
definitions and component definitions.

The edits below change all of these to require initialization expressions
instead of constant expressions.

EDIT:

[39:15] Change "a constant specification" to "an initialization".
{Fix array components}

[39:23] Change "a constant specification" to "an initialization".
{Fix character string components}

[40:30] Change "a constant" to "an initialization".
{Fix note}

[48:47-48] Change "may be a nonconstant expression provided the specification
                   expression"
           to "shall be an initialization expression unless it".
[49:1-3] Delete "If a ... nonconstant expression."
[49:4-5] Change "such a nonconstant expression"
         to "a <specification-expr> that is not an initialization expression".
{Fix definition of "automatic object"}

[49:9] Change "a nonconstant expression"
       to "an expression that is not an initialization expression".
{Fix evaluation time for character length}

[51:33] Change "a constant specification" to "an initialization".
{Fix statement function character lengths}

[54:33] Change "nonconstant specification" to "not initialization".
{Fix automatic array definition}

[54:34] Change "nonconstant specification" to "not initialization".
{Fix evaluation time for explicit-shape array bounds}

[56:32] Change "nonconstant specification" to "not initialization".
{Fix evaluation time for assumed-size array bounds}

[69:3-4] Change "a constant specification expression (7.1.6.2)"
         to "an initialization expression (7.1.6.1)".
{Fix common block array-specs}

SUBMITTED BY:  Henry Zongaro
HISTORY:  99-178   m150 submitted
          99-216r1 m150 proposed answer
