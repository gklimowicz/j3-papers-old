                                                            J3/12-112
To: J3
From: Malcolm Cohen
Subject: Minor editorial changes for next revision.
Date: 2012 January 29


1. Introduction

This paper contains minor editorial changes that will be applied to the
next revision of the standard.


2. Minor editorial changes to 10-007r1

[75:19] In 4.5.6.1 Declaration (of 4.5.6 Final subroutines), p2,
        Append sentence to paragraph "No other entity is finalizable.".
{Clarification.}

[76:15] In 4.5.6.3 When finalization occurs, p4,
        Before "function" insert "nonpointer".
{Avoid contradiction: pointer function references don't get finalized since
 pointers don't get finalized.}

[93:18-19] 5.3.7p2 item (6) subitem (c),
{This is an ordering requirement that is misunderstandable due to use of
 the word "subset"; split it into two requirements: firstly, that the
 ordering is "the same":}
Replace text with
  "the array element ordering of the elements of the section is the same as
   the array element ordering of those elements of the base object,"
{Secondly, that the subset of section elements is "dense" in the base
 object.  There are three alternatives for the new text.
 Note TeX formatting of $e_1$: e is in italics, with subscript 1.}
Insert new item (c2)
FIRST ALTERNATIVE:
  "in the array element ordering of the elements of the base object, there
   does not exist elements $e_1$, $e_2$, and $e_3$ such that $e_1$ precedes
   $e_2$ which precedes $e_3$, $e_2$ is not an element of the section, and
   both $e_1$ and $e_3$ are elements of the section,"
SECOND ALTERNATIVE:
  "in the array element ordering of the base object, every element of the
   base object that is not an element of the section either precedes every
   element of the section or follows every element of the section,"
THIRD ALTERNATIVE:
  "if the elements of the section are $e_1$ ... $e_n$, for every $x$ that
   is an element of the base object and not an element of the section,
   either $x$ precedes every $e_i$ or $x$ follows every $e_i$, in the array
   element ordering of the base object,"
{My recommendation is the second alternative.}

[95:24] In 5.3.8.4 Deferred-shape array, p5, second bullet item,
        After "pointer assignment" delete "statement".
{The "statement" bit is superfluous and wrong.}

[152:4] In 7.1.12 Constant expression, p1, list item (6),
        Insert "or" before "THIS_IMAGE".
{Missing disjunction.}

[275:6] In 11.2.3 Submodules, p2,
  After "second element is the submodule name" insert
    "; the submodule name by itself is not a local or global identifier".
{Clarification.}

[356:18,21] In 13.7.80 INDEX, Result Value, Case (i) and Case (ii),
            Replace "value of I" with "integer I"
{The pseudo-variable "I" just appears with no explanation; if I am reading
 the standard with IMPLICIT NONE, I get an error.}

[397:23] In 13.8.2.6 COMPILER_OPTIONS, Class paragraph,
         Change "Inquiry" to "Transformational".
{Inquiry functions depend on "properties of their argument(s) other than
 the value".  Since there is no argument, it cannot depend on its
 properties.  This can only be a Transformational function.}

[398:1] In 13.8.2.7 COMPILER_VERSION, Class paragraph,
         Change "Inquiry" to "Transformational".
{Ditto.}

[443:12] In 16.5.1.2 Argument association, p1,
         Change "correspondance" to "correspondence".
{Spelliong.}

===END===
