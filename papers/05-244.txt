                                                                         
                                             J3/05-244
To: J3
From: Dan Nagle
Subject: Obsoleting Entry
Date 2005 July 29

At Delft, it was decided to obsolescent the obsolete feature entry.
This paper attempts to provide edits to do so.

Edits consist of "small fonting" all references to entry
in page order throughout 007.  A paragraph added
to appendix B.

Edits:

"Small font" the following:
[10:6] or entry-stmt
[10:8] or entry-stmt
[10:21] or entry-stmt
[13:36] the ENTRY statement,
[14] Table 2.1, left column "and ENRTY statements"
[14] Table 2.2, row "ENTRY statements"
[96:9-10] "an entry name"
[98:22] "an entry name"
[122:6] "or ENTRY (12.5.2.4) statement"
[122:23] "or ENTRY (12.5.2.4) statement"
[142:9] "or ENTRY (12.5.2.4) statement"
[249:16-17] "or an ENTRY statement"
[250:20] "an entry-stmt,"
[250] Note 11.4 "ENTRY statements,"
[255:7] "or ENTRY statement"
[255:35-256:1] "an internal subprogram shall not contain an ENTRY statement,"
[256:5-6] "If the subprogram has one or more ENTRY statements,
           it also defines a procedure for each of them."
[258:9] ", or ENTRY statement"
[258:11] ", except that the ENTRY statement shall not appear
         in an interface body"
[259:12] "entry-stmt,"
[259:41:42] "An interface for a procedure named
            by an ENTRY statement may be specified by 41
            using the entry name as the procedure name in the interface body."
[279:12] "or ENTRY statement"
[279:22-23] "and shall not be the same as the entry-name
             in any ENTRY statement in the subprogram."
[280:12] C1244
[280:26-30] entire paragraph
[282:16] C1249
[282:21-25] "or a subroutine defined by an ENTRY statement
            in the same subprogram. Similarly, RECURSIVE shall
            appear if a subroutine defined by an ENTRY statement
            in the subprogram directly or indirectly invokes
            itself, another subroutine defined by an ENTRY statement
            in that subprogram,"
[283:1-284:23] 12.5.2.4 ENTRY statement (the entrie section)
[407:11-14] entire (3)
[407:21] "or ENTRY statement in a function subprogram,"
[411:24] "in an entry-stmt,"
[411:26] "or in an entry-stmt"
[417:6] "or an ENTRY statement"
[417:18] "An ENTRY statement in a function subprogram
          causes storage association of the result variables."
[417:26] "or ENTRY"
[433:25-26] "A subprogram may define more than one procedure
            if it contains ENTRY statements."
[505] "or entry-stmt" twice (R206, R207)
[506] "or entry-stmt" R209
[520] "an entry name," (C576)
[521] "an entry name," (C588)
[537] "or an ENTRY statement." (C1101)
[537] "an entry-stmt," (C1105)
[539] "entry-stmt," (C1206)
[541] "and shall not be the same as the entry-name
       in any ENTRY statement in the subprogram." (C1234)
[541] C1244
[542] C1249
[542] R1235
[542] C1252
[542] C1253
[542] C1254
[542] C1255
[542] "and shall not be the same as the entry-name
       in any ENTRY statement in the subprogram" (C1257)
[547] entry name row
[547] R1235 row
[560] entry name, entry statement, entry-stmt
[567] entry

Add:

[439:22+]

"B.2.8 Entry Statements

Entry statements allowed more than one entry point
to an executable subprogram, which allowed sharing
of data items local to that subprogram.  This effect
may be made by use of module procedures, with fewer
restrictions and greater safety."
