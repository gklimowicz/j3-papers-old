
                                                  J3/06-214

To:      J3
From:    Bill Long
Subject: C4 - UTI 16 : bits compatible / TK compatible
Date:    28-jul-2006

---------------------

Unresolved Technical Issue 16 (page 45) states:

It is unclear whether the term "bits compatible" is useful or
necessary. It is (mostly?) being used where otherwise we would be
saying "type compatible with the same kind type parameters" (so-called
TK compatibility).  If that really is the only use, we should write
the "TK compatibility" definition in one place and use it everywhere;
otherwise, this extra complication is likely to lead to
questions. (Alternative names for TK compatible are "kind compatible"
and "type and kind compatible". The latter is probably the best.)

Reply:

The term "bits compatible" is used as part of the definition of TKR
[45], pointer assignment [163,164], integer editing [265], bits
editing [271], argument association [312, 313, 314], and variable
undefinition [506 - see Issue 76, paper 06-232]. So some term to
identify this relationship seems useful.

The meaning of "bits compatible" is not at all similar to the meaning
of "type compatible with the same kind type parameters". From [44:25]
"type compatible" requires that the entities have the same declared
type. Not the case with bits compatible.  Also, the values of the kind
type parameters of two bits compatible entities are often not the
same.  The names "TK compatible", "kind compatible", and "type and
kind compatible" are all unacceptable as alternatives to "bits
compatible".

Edits:
------
(none)
