
                                                             J3/04-405r1

Date:      10 November 2004
To:        J3
From:      Van Snyder
Subject:   Interpretation request on type-bound generic interfaces
Reference: 04-406r1

NUMBER: F03/0018
TITLE:  Multiple identical specific procedures in type-bound generic interfaces
KEYWORDS: Type-bound generics
DEFECT TYPE: Clarification
STATUS:

QUESTION 1:

Does the following program unit conform to the 2003 standard?

  module M
    type T
    contains
      procedure MyAdd
      generic :: operator(+) => myAdd
    end type T
    type X
    contains
      procedure, pass(b) :: MyAdd
      generic :: operator(+) => myAdd
    end type X
  contains
    integer function MyAdd ( A, B )
      type(t), intent(in) :: A
      type(x), intent(in) :: B
    end function MyAdd
  end module M

QUESTION 2:

Does the following program unit conform to the 2003 standard?

  module M
    interface operator(+)
      procedure MyAdd
    end interface
    type T
    contains
      procedure MyAdd
      generic :: operator(+) => myAdd
    end type T
  contains
    integer function MyAdd ( A, B )
      type(t), intent(in) :: A
      real, intent(in) :: B
    end function MyAdd
  end module M

QUESTION 3:

If the interface block and type definition are exchanged in QUESTION 2,
does the program unit conform to the 2003 standard?

ANALYSIS:

The OPERATOR(+) bindings to the types T and X construct a single generic
OPERATOR(+) interface that is a local entity of module M.  They do not
construct separate OPERATOR(+) generic interfaces that are separate local
entities of the types.

16.2.3 (Restrictions on generic declarations) specifies that it "contains
the rules that shall be satisfied by every pair of specific procedures
that have the same generic identifier within a scoping unit."

It is clear that if different functions with identical interfaces were
bound to the types that they would be a "pair of specific procedures" and
the resulting OPERATOR(+) interface would therefore be prohibited by
16.2.3.

It is not clear whether the generic bindings bind separate specific
procedures to the OPERATOR(+) generic, or only redundantly bind the same
procedure.  If the former, the program units are not standard conforming
because they violate the provisions of 16.2.3.  If the latter, they
appear to be standard conforming.

C1209 (in 12.3.2.1) prohibits a procedure to be bound to a generic
interface more than once in a scoping unit, but only by way of a
PROCEDURE statement in a generic interface block.  There is nothing
obviously equivalent in 4.5.4, nor anything that specifies that C1209
applies to generic bindings to types.  It also does not apply between a
generic interface block and a generic interface previously specified by a
generic binding to a type (question 3), since the latter specific binding
is accomplished by a conspiracy of a <proc-binding-stmt> and a <generic-
binding>, not by a <procedure-stmt>.

ANSWER:

The program units conform to the 2003 standard.  Multiple bindings of the
same procedure to a generic identifier using a <generic-binding> in a
type definition or by a type definition and a generic interface block do
not bind a "pair of specific procedures" to the generic interface. 
Indeed, the following type definition is legal:

  type Z
  contains
    procedure :: MyAdd
    generic :: operator(+) => myAdd, operator(+) => myAdd
  end type Z

An edit is provided to clarify this.

EDITS: None.

SUBMITTED BY:  Van Snyder
HISTORY:  04-405   m170 submitted
          04-405r1 m170 passed J3 meeting
