                                             J3/07-287r1
To: J3
From: Stan Whitlock
Subject: Obsoleting Entry
Date: 2007 November 12

History: 05-244r3

At Delft, it was decided to obsolescent the obsolete feature entry.
At London, this decision was reaffirmed when it was discovered
that entry had not been obsolescent-ed yet.  A search of the paper
trail could not find a decision rescinding the Delft decision.
This paper attempts to provide edits to do so.

Edits consist of "small fonting" all references to entry
in page order throughout 007 and adding a paragraph
to appendix B.

Specifications:

Specifications are as per RU-003 as modified by N1638.

Move entry statements to the obsolescent list,
and "small font" them from the standard.

Syntax:

None.

Edits to 07-007r3:

[7:5] Change "There are five ... which" to "The first category, deleted
              features,"

"Small font" the following:

[27:28] "or entry-stmt"
[27:30] "or entry-stmt"
[27:43] "or entry-stmt"
[31:23] "the ENTRY statement,"
[32] Table 2.1, left column "and ENRTY statements"
[32] Table 2.2, row "ENTRY statements"
[116:30-31] "an entry name"
[119:18] "an entry name"
[153:6] "or ENTRY (12.6.2.6)"
[153:23] "or ENTRY (12.6.2.6)"
[164:23] "or ENTRY (12.6.2.6)"
[288:15] "an entry-stmt,"
[288] in Note 11.4 "ENTRY statements,"
[295:8] "or ENTRY"
[295:33] ", an internal subprogram shall not contain an ENTRY statement,"
[296:2-3] "If the subprogram has one or more ENTRY statements,
           it also defines a procedure for each of them."
[298:26] ", or ENTRY"
[298:28] ", except that the ENTRY statement shall not appear in an
           interface body"
[299:37] "entry-stmt,"
[300:29-30] "An interface for a procedure named by an ENTRY statement
             may be specified by using the entry name as the
             procedure name in the interface body."
[326:9] ", and each ENTRY ... (12.6.2.6)"
[327:14-15] "and shall not be the same as the entry-name
             in any ENTRY statement in the subprogram."
[330:30-332:13] 12.5.2.4 ENTRY statement (the entire section)
[475:10-13] entire 3rd bullet
[475:20] "or ENTRY statement in a function subprogram,"
[478:35] "in an entry-stmt,"
[478:37] "or in an entry-stmt"
[485:6] "or an ENTRY statement"
[485:18] "An ENTRY statement in a function subprogram
          causes storage association of the result variables."
[485:26] "or ENTRY"

Add:

[495:30+]

"A.2.9 Entry Statements

Entry statements allowed more than one entry point
to a subprogram, facilitating sharing
of data items and executable statements local to that subprogram."
