                                                     J3/11-223
To: J3
From: Malcolm Cohen
Subject: Polymorphic argument presence
Date: 2011 June 30

----------------------------------------------------------------------

NUMBER: F03/0103
TITLE: Restrictions on dummy arguments not present for polymorphic
       type or parameterized derived type
KEYWORDS: dummy argument, present, polymorphic, parameterized derived
          type
DEFECT TYPE: Erratum
STATUS: J3 consideration in progress

QUESTION:

Consider
    Type t
      Real x
    End Type
    ...
    Subroutine s(x)
      Class(t),Optional :: x
      If (.Not.Present(x)) Call s2(x)
    End Subroutine
    Subroutine s2(y)
      Type(t),Optional :: y
      If (Present(y)) Print *,y
    End Subroutine

Q1. Is the reference to s2, passing a polymorphic optional argument
    that is not present to a non-polymorphic optional dummy, standard
    conforming?

Consider
    Type pdt(n)
      Integer,Length :: n
      Real x(n)
    End Type
    ...
    Subroutine s3(y)
      Type(pdt(*)),Optional :: y
      If (.Not.Present(y)) Call s4(y)
    End Subroutine
    Subroutine s4(z)
      Type(pdt(10)),Optional :: z
      If (Present(z)) Print *,z%x
    End Subroutine

Q2. Is the reference to s4, passing an optional dummy argument with an
    assumed type parameter to an optional dummy argument with a non-
    assumed type parameter, standard conforming?

    Note that 12.5.2.4 paragraph 3 requires the length type parameter
    values to be the same (with no mention of argument presence).

One might conjecture that these should not be conforming because the
argument passing conventions between s and s2, and between s3 and s4,
might be different (descriptor vs. reference).

DISCUSSION:

This does not seem to be limited to derived types, for example:
    Subroutine s3(y)
      Character(*),Optional :: y
      If (.Not.Present(y)) Call s4(y)
    End Subroutine
    Subroutine s4(z)
      Character(10),Optional :: z
      If (Present(z)) Print *,z
    End Subroutine
?

ANSWER:

These were all intended to be standard-conforming.

An edit is supplied to correct the type parameter matching
requirements.

EDIT to 10-007r1:

[293:6] 12.5.2.4, beginning of paragraph 3, insert new sentence
  "The kind type parameter values of the actual argument shall agree
   with the corresponding ones of the dummy argument."
and change
  "The type parameter values of the actual argument"
to
  "The length type parameter values of a present actual argument".

[293:10] 12.5.2.4, paragraph 4,
         before "scalar" insert "present".

SUBMITTED BY: Jim Xia

HISTORY: 07-298r1  m182  F03/0103 submitted
         07-298r2  m182  Passed by J3 meeting
         08-133r2  m183  Failed J3 letter ballot #15 08-101
         11-nnn    m195  Revised answer

----------------------------------------------------------------------
