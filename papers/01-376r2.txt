
                                                          J3/01-376R2

Date:     December 6, 2001
To:       j3
From:     Subgroup C
Subject:  Chapter 6 comments, updated from meeting 158

This is an update of 282/R2 from meeting 158.  I deleted the items
that were taken care of at the last meeting to make it easier for the
B team to process.  I kept the same numbering scheme as in 282 so that
notes from last meeting should still be valid.

Page, etc., numbers have been updated to the current 007/R4 PDF version

The edit has been changed from 01-376 by subgroup C.

10)  Page 110[11-12], 6.3.3.2, 2nd paragraph, second sentence.  Seems to
restate the first, or how can a portion be independent of any other
portion?

The R1 version of this paper gave rise to a need for clarification.
The following example was given:

        TYPE T
        REAL, POINTER :: P(:)
        END TYPE T
        TYPE(T), ALLOCATABLE:: A
        REAL, POINTER:: Q(:)
        ALLOCATE(A(10))
        ALLOCATE(A(3)%P(9))
        Q => A(3)%P
        DEALLOCATE(Q)   ! is this legal

While A(3)%P is a subjobject of A, the target of A(3)%P is not a
subobject of A, and since Q points to the whole of the target
of A(3)%P the deallocate statement is legal.

Edit:

in 007R4

[110:10-12] Replace first two sentences of the paragraph with

"A pointer shall not be deallocated if it is currently associated
with a subobject of an allocated target that is not the whole of
that target."
