                                                        J3/16-267r1
To: J3
From: Van Snyder & Malcolm Cohen
Subject: Comments on Clause 14
Date: 2016 October 11

1a. Edits accepted

[298:5 C1416] Delete "definitions of" before "derived type definitions"
{What's a "definition of a derived-type definition"?}


1b. Edits rejected

[293:15] 14.1p3] Delete the paragraph.  There is no interpretation of the
use of a program name.  There's no point to prohibiting the impossible.

REJECTED: This is useful to state outright as a simple prohibition.

[295:1 14.2.2p2] After "defined" insert "or declared".

REJECTED: Unnecessary.

[296:10 14.2.2p8] The first sentence, viz., "An ultimate entity is a
module entity that is not accessed by use association." is confusing.
If one has a module A in which a module entity E is defined or declared,
and a module B in which it is accessed from module A by use association,
but module C does not access it from module B, is it an ultimate entity?
Replace it with "An entity that is defined or declared in a module, but
not accessed in that module by use association from another module, is
an ultimate entity of that module."

REJECTED: Already correct as is, this would raise questions about what
          we mean elsewhere.


2. Questions and comments without edits

[296:25 14.2.2p11+] The syntax allows "USE, only:", i.e., without an
<only-list>.  The effect of doing so is not described.

RESPONSE: The effect is described in p5.  It is not interesting,
          or particularly useful, but it is described.

[298:10 14.3p2] What does "all storage units in the common block
sequence shall be specified" mean?  Does it mean they have to be
declared in a COMMON statement?  Isn't this implied by the requirement
that named common blocks are required to have the same storage size in
all scoping units?

RESPONSE: This does appear to be redundant, but is harmless and it is
          not worth editing an obsolescent feature.

===END===
