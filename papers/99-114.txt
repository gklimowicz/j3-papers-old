                                                                    J3/99-114
Date:    2nd March 1999
To:      J3
From:    Malcolm Cohen
Subject: Unresolved issues 71 and 84.

INTRODUCTION:
-------------
Issue 71a is essentially, are parametric polymorphic entities allowed?  The
answer has to be yes otherwise parameterised extension types are unreasonably
limited.

Issue 71b is that <restricted-type-spec> is a poor choice of name.  I could not
agree more.  The suggested alternative is <declaration-type-spec> because it is
the type specifier that is used in declarations.  (An alternative would be to
restore the original <type-spec> and call the executable version
<executable-type-spec>; I favour <declaration-type-spec> myself).

Issue 84 is "Do we allow deferred or assumed type parameters with IMPLICIT?".
The answer is yes, viz
  IMPLICIT (C) CHARACTER*(*)
is legal (an assumed type parameter in F77).  [Note: From the implementors
point of view, IMO assumed/deferred type parameters in IMPLICIT are not as
tricky as non-constant expression type parameters.]  There are no
restrictions on the type parameters in an IMPLICIT in F77/F90/F95 as far as
I am aware, nor are there in the F2002 draft, so we don't need to do anything
to resolve this issue (other than delete the J3 internal note).

EDITS:
------
Note that some of these changes will be different according to the action taken
on some other unresolved issues, in particular issues 73/77.

Change "<restricted-type-spec>" to "<declaration-type-spec>" everywhere it
appears, viz [40:25], [40:36], [40:39], [41:10], [56:1], [56:5], [61:19],
[61:22], [61:25], [68:2], [78:36], [86:39], [89:2], [263:36], [265:28].
Also change the index entry.

Delete J3 internal note for issue 84, viz [86:40-43].

[61:20] Replace "<extensible-type-name>" with "<derived-type-spec>".

[61:23+] Add constraints:
"Constraint: In a <declaration-type-spec> that uses the CLASS keyword,
             <derived-type-spec> shall specify an extensible type."

****************************************END
