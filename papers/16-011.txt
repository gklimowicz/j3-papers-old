                                                            J3/16-011
To: J3
From: Malcolm Cohen
Subject: Editor's list of unresolved technical issues
Date: 2016 January 04


A. Introduction
---------------

This document lists the technical issues raised by the editor with the
current working document, standing document 007.

Issues are separated into two lists; the resolved ones and the unresolved
ones.  When an issue is resolved, the J3 note in SD-007 will be deleted and
the item moved from the unresolved list to the resolved list.  Issue
numbers will not be reused.

The one-line description is just a hint as to the issue, not a
comprehensive statement of it.


B. Unresolved issues
--------------------

013. Accessibility ambiguity.
     Feature: Module names in accessibility statements.
     Added in: 16-007 as a result of processing 15-247r1.

014. Another accessibility ambiguity.
     Feature: Module names in accessibility statements.
     Added in: 16-007 as a result of processing 15-247r1.

015. Attributes wrong for LOCAL and LOCAL_INIT.
     Feature: Locality specs.
     Added in: 16-007 as a result of processing 15-246r1.

C. Resolved issues
------------------

001.  Ambiguous syntax.
      Feature: Pointer function references as variables.
      Resolved in 14-007r1 by 14-115r2.

002.  ASSOCIATE ok for plain procedure pointer?
      Resolved in 14-007r1 by 14-114r1.

003.  Cannot count.
      Feature: Editor.
      Resolved in 14-007r1 by not existing in the first place.

004. Formal parameters in a prototype cannot have any value whatsoever.
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resolved in 15-007 by 14-197r2.

005. An effective argument is not EVER an address.
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resolved in 15-007r1 by 15-113r3.

006. An interoperable procedure written in Fortran does not even have any
     formal parameter, so it cannot have the value of a null pointer.
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resolved in 15-007 by 14-197r2.

007. Fortran objects do not have a "host instance".
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resolved in 15-007 by 14-197r2.

008. Is the processor required to define a nonnegative type specifier value
     for the above cases?
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resulted by: 15-200r2 in 15-007r2.

009. shall contain ... macro definitions that expand to integer constants.
     Feature: Further C interop (TS).
     Added in: 14-007r1 as a result of processing N1942.
     Resolved in 15-007 by 14-197r2.

010. RANDOM_INIT example text claim is inconsistent with RNG definition.
     Feature: Intrinsic function RANDOM_INIT.
     Added in: 14-007r2 as a result of processing 14-184r4.
     Resolved in: 15-007r1 by 15-140r1.

011. GET_ENVIRONMENT_VARIABLE has no example.
     Feature: Intrinsic subroutine GET_ENVIRONMENT_VARIABLE (base F2003).
     Added in: 15-007 as a side-effect of processing 14-247r3.
     Resolved in: 15-007r1 by 15-112r4.

012. Term "actual argument" wrong, nonsensical "effective argument".
     Feature: Further C interop (TS).
     Added in: 15-007r1 as a result of review of the UTI 005 resolution.
     Resulted by: 15-200r2 in 15-007r2.

===END OF DOCUMENT===
